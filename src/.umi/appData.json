{
  "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
  "pkg": {
    "name": "ant-design-pro",
    "version": "6.0.0",
    "private": true,
    "description": "An out-of-box UI solution for enterprise applications",
    "repository": "git@github.com:ant-design/ant-design-pro.git",
    "scripts": {
      "analyze": "cross-env ANALYZE=1 max build",
      "build": "max build",
      "deploy": "npm run build && npm run gh-pages",
      "dev": "npm run start:dev",
      "gh-pages": "gh-pages -d dist",
      "i18n-remove": "pro i18n-remove --locale=zh-CN --write",
      "postinstall": "max setup",
      "jest": "jest",
      "lint": "npm run biome:lint && npm run tsc",
      "lint-staged": "lint-staged",
      "biome:lint": "npx @biomejs/biome lint",
      "openapi": "max openapi",
      "prepare": "husky",
      "preview": "npm run build && max preview --port 8000",
      "record": "cross-env NODE_ENV=development UMI_ENV=test max record --scene=login",
      "serve": "umi-serve",
      "start": "cross-env UMI_ENV=dev max dev",
      "start:dev": "cross-env UMI_ENV=dev MOCK=none max dev",
      "start:no-mock": "cross-env MOCK=none max dev",
      "start:pre": "cross-env UMI_ENV=pre MOCK=none max dev",
      "start:test": "cross-env UMI_ENV=test MOCK=none max dev",
      "test": "jest",
      "test:coverage": "npm run jest -- --coverage",
      "test:update": "npm run jest -- -u",
      "tsc": "tsc --noEmit"
    },
    "browserslist": [
      "defaults"
    ],
    "dependencies": {
      "@ant-design/icons": "^5.6.1",
      "@ant-design/pro-components": "^2.8.10",
      "@ant-design/pro-form": "^2.32.0",
      "@ant-design/pro-layout": "^7.17.6",
      "@ant-design/pro-list": "^2.5.29",
      "@ant-design/pro-table": "^3.12.5",
      "@ant-design/v5-patch-for-react-19": "^1.0.3",
      "@umijs/max": "^4.3.24",
      "ali-oss": "^6.23.0",
      "antd": "^5.26.4",
      "antd-style": "^3.7.0",
      "axios": "^1.12.2",
      "classnames": "^2.5.1",
      "dayjs": "^1.11.13",
      "lucide-react": "^0.545.0",
      "md5": "^2.3.0",
      "react": "^19.1.0",
      "react-dom": "^19.1.0"
    },
    "devDependencies": {
      "@ant-design/pro-cli": "^3.3.0",
      "@biomejs/biome": "^2.1.1",
      "@commitlint/cli": "^19.8.1",
      "@commitlint/config-conventional": "^19.8.1",
      "@testing-library/dom": "^10.4.0",
      "@testing-library/react": "^16.3.0",
      "@types/ali-oss": "^6.16.11",
      "@types/express": "^5.0.3",
      "@types/jest": "^30.0.0",
      "@types/md5": "^2.3.5",
      "@types/node": "^24.0.13",
      "@types/react": "^19.1.8",
      "@types/react-dom": "^19.1.6",
      "@types/react-helmet": "^6.1.11",
      "cross-env": "^10.0.0",
      "express": "^4.21.1",
      "gh-pages": "^6.1.1",
      "husky": "^9.1.7",
      "jest": "^30.0.4",
      "jest-environment-jsdom": "^30.0.5",
      "lint-staged": "^16.1.2",
      "mockjs": "^1.1.0",
      "ts-node": "^10.9.2",
      "typescript": "^5.6.3",
      "umi-presets-pro": "^2.0.3",
      "umi-serve": "^1.9.11"
    },
    "engines": {
      "node": ">=20.0.0"
    },
    "create-umi": {
      "ignoreScript": [
        "docker*",
        "functions*",
        "site",
        "generateMock"
      ],
      "ignoreDependencies": [
        "netlify*",
        "serverless"
      ],
      "ignore": [
        ".dockerignore",
        ".git",
        ".github",
        ".gitpod.yml",
        "CODE_OF_CONDUCT.md",
        "Dockerfile",
        "Dockerfile.*",
        "lambda",
        "LICENSE",
        "netlify.toml",
        "README.*.md",
        "azure-pipelines.yml",
        "docker",
        "CNAME",
        "create-umi"
      ]
    }
  },
  "pkgPath": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\package.json",
  "plugins": {
    "./node_modules/@umijs/core/dist/service/servicePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "preset",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/core/dist/service/servicePlugin.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/core/dist/service/servicePlugin",
      "key": "servicePlugin"
    },
    "@umijs/preset-umi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 78
      },
      "enableBy": "register",
      "type": "preset",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/index.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "@umijs/preset-umi",
      "key": "umi"
    },
    "./node_modules/@umijs/max/dist/preset": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 28
      },
      "enableBy": "register",
      "type": "preset",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/max/dist/preset.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/max/dist/preset",
      "key": "preset"
    },
    "umi-presets-pro": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 11
      },
      "enableBy": "register",
      "type": "preset",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/umi-presets-pro/dist/index.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "umi-presets-pro",
      "key": "umiPresetsPro"
    },
    "./node_modules/@umijs/preset-umi/dist/registerMethods": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            0
          ]
        },
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/registerMethods.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/registerMethods",
      "key": "registerMethods"
    },
    "@umijs/did-you-know": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            2
          ]
        },
        "register": 7
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/did-you-know/dist/plugin.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "@umijs/did-you-know",
      "key": "umijsDidYouKnow"
    },
    "./node_modules/@umijs/preset-umi/dist/features/404/404": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/404/404.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/404/404",
      "key": "404"
    },
    "./node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/aiDev/aiDev",
      "key": "aiDev"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/appData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            54
          ]
        },
        "register": 46
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/appData/appData.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/appData",
      "key": "appData"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/appData/umiInfo.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo",
      "key": "umiInfo"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/check": {
      "config": {},
      "time": {
        "hooks": {
          "onCheckConfig": [
            0
          ],
          "onCheck": [
            1
          ]
        },
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/check/check.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/check",
      "key": "check"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/babel722": {
      "config": {},
      "time": {
        "hooks": {
          "onCheck": [
            0
          ]
        },
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/check/babel722.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/babel722",
      "key": "babel722"
    },
    "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting",
      "key": "codeSplitting"
    },
    "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 25
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins",
      "key": "configPlugins"
    },
    "virtual: config-title": {
      "id": "virtual: config-title",
      "key": "title",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styles": {
      "id": "virtual: config-styles",
      "key": "styles",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-scripts": {
      "id": "virtual: config-scripts",
      "key": "scripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routes": {
      "id": "virtual: config-routes",
      "key": "routes",
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routeLoader": {
      "id": "virtual: config-routeLoader",
      "key": "routeLoader",
      "config": {
        "default": {
          "moduleType": "esm"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-reactRouter5Compat": {
      "id": "virtual: config-reactRouter5Compat",
      "key": "reactRouter5Compat",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-presets": {
      "id": "virtual: config-presets",
      "key": "presets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-plugins": {
      "id": "virtual: config-plugins",
      "key": "plugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-npmClient": {
      "id": "virtual: config-npmClient",
      "key": "npmClient",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mountElementId": {
      "id": "virtual: config-mountElementId",
      "key": "mountElementId",
      "config": {
        "default": "root"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-metas": {
      "id": "virtual: config-metas",
      "key": "metas",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-links": {
      "id": "virtual: config-links",
      "key": "links",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-historyWithQuery": {
      "id": "virtual: config-historyWithQuery",
      "key": "historyWithQuery",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-history": {
      "id": "virtual: config-history",
      "key": "history",
      "config": {
        "default": {
          "type": "browser"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-headScripts": {
      "id": "virtual: config-headScripts",
      "key": "headScripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esbuildMinifyIIFE": {
      "id": "virtual: config-esbuildMinifyIIFE",
      "key": "esbuildMinifyIIFE",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionRoutes": {
      "id": "virtual: config-conventionRoutes",
      "key": "conventionRoutes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionLayout": {
      "id": "virtual: config-conventionLayout",
      "key": "conventionLayout",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-base": {
      "id": "virtual: config-base",
      "key": "base",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-analyze": {
      "id": "virtual: config-analyze",
      "key": "analyze",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-writeToDisk": {
      "id": "virtual: config-writeToDisk",
      "key": "writeToDisk",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-transformRuntime": {
      "id": "virtual: config-transformRuntime",
      "key": "transformRuntime",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-theme": {
      "id": "virtual: config-theme",
      "key": "theme",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-targets": {
      "id": "virtual: config-targets",
      "key": "targets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgr": {
      "id": "virtual: config-svgr",
      "key": "svgr",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgo": {
      "id": "virtual: config-svgo",
      "key": "svgo",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-stylusLoader": {
      "id": "virtual: config-stylusLoader",
      "key": "stylusLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styleLoader": {
      "id": "virtual: config-styleLoader",
      "key": "styleLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspilerOptions": {
      "id": "virtual: config-srcTranspilerOptions",
      "key": "srcTranspilerOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspiler": {
      "id": "virtual: config-srcTranspiler",
      "key": "srcTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-sassLoader": {
      "id": "virtual: config-sassLoader",
      "key": "sassLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-runtimePublicPath": {
      "id": "virtual: config-runtimePublicPath",
      "key": "runtimePublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-purgeCSS": {
      "id": "virtual: config-purgeCSS",
      "key": "purgeCSS",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-publicPath": {
      "id": "virtual: config-publicPath",
      "key": "publicPath",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-proxy": {
      "id": "virtual: config-proxy",
      "key": "proxy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-postcssLoader": {
      "id": "virtual: config-postcssLoader",
      "key": "postcssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-outputPath": {
      "id": "virtual: config-outputPath",
      "key": "outputPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-normalCSSLoaderModules": {
      "id": "virtual: config-normalCSSLoaderModules",
      "key": "normalCSSLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mfsu": {
      "id": "virtual: config-mfsu",
      "key": "mfsu",
      "config": {
        "default": {
          "strategy": "eager"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mdx": {
      "id": "virtual: config-mdx",
      "key": "mdx",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-manifest": {
      "id": "virtual: config-manifest",
      "key": "manifest",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-lessLoader": {
      "id": "virtual: config-lessLoader",
      "key": "lessLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifierOptions": {
      "id": "virtual: config-jsMinifierOptions",
      "key": "jsMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifier": {
      "id": "virtual: config-jsMinifier",
      "key": "jsMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-inlineLimit": {
      "id": "virtual: config-inlineLimit",
      "key": "inlineLimit",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-ignoreMomentLocale": {
      "id": "virtual: config-ignoreMomentLocale",
      "key": "ignoreMomentLocale",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-https": {
      "id": "virtual: config-https",
      "key": "https",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-hash": {
      "id": "virtual: config-hash",
      "key": "hash",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-forkTSChecker": {
      "id": "virtual: config-forkTSChecker",
      "key": "forkTSChecker",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-fastRefresh": {
      "id": "virtual: config-fastRefresh",
      "key": "fastRefresh",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraPostCSSPlugins": {
      "id": "virtual: config-extraPostCSSPlugins",
      "key": "extraPostCSSPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPresets": {
      "id": "virtual: config-extraBabelPresets",
      "key": "extraBabelPresets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPlugins": {
      "id": "virtual: config-extraBabelPlugins",
      "key": "extraBabelPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelIncludes": {
      "id": "virtual: config-extraBabelIncludes",
      "key": "extraBabelIncludes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-externals": {
      "id": "virtual: config-externals",
      "key": "externals",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esm": {
      "id": "virtual: config-esm",
      "key": "esm",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-devtool": {
      "id": "virtual: config-devtool",
      "key": "devtool",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-depTranspiler": {
      "id": "virtual: config-depTranspiler",
      "key": "depTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-define": {
      "id": "virtual: config-define",
      "key": "define",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-deadCode": {
      "id": "virtual: config-deadCode",
      "key": "deadCode",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssPublicPath": {
      "id": "virtual: config-cssPublicPath",
      "key": "cssPublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifierOptions": {
      "id": "virtual: config-cssMinifierOptions",
      "key": "cssMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifier": {
      "id": "virtual: config-cssMinifier",
      "key": "cssMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoaderModules": {
      "id": "virtual: config-cssLoaderModules",
      "key": "cssLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoader": {
      "id": "virtual: config-cssLoader",
      "key": "cssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-copy": {
      "id": "virtual: config-copy",
      "key": "copy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-checkDepCssModules": {
      "id": "virtual: config-checkDepCssModules",
      "key": "checkDepCssModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-chainWebpack": {
      "id": "virtual: config-chainWebpack",
      "key": "chainWebpack",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cacheDirectoryPath": {
      "id": "virtual: config-cacheDirectoryPath",
      "key": "cacheDirectoryPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-babelLoaderCustomize": {
      "id": "virtual: config-babelLoaderCustomize",
      "key": "babelLoaderCustomize",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoprefixer": {
      "id": "virtual: config-autoprefixer",
      "key": "autoprefixer",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoCSSModules": {
      "id": "virtual: config-autoCSSModules",
      "key": "autoCSSModules",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-alias": {
      "id": "virtual: config-alias",
      "key": "alias",
      "config": {
        "default": {
          "umi": "@@/exports",
          "react": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react",
          "react-dom": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-dom",
          "react-router": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-router",
          "react-router-dom": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-router-dom"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin",
      "key": "crossorigin"
    },
    "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 4
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand",
      "key": "depsOnDemand"
    },
    "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/devTool/devTool.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool",
      "key": "devTool"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 109
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker",
      "key": "esbuildHelperChecker"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 120
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/esmi/esmi.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi",
      "key": "esmi"
    },
    "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic": {
      "config": {},
      "time": {
        "hooks": {
          "onCheck": [
            0
          ]
        },
        "register": 43
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic",
      "key": "exportStatic"
    },
    "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/favicons/favicons.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons",
      "key": "favicons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/helmet/helmet.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet",
      "key": "helmet"
    },
    "./node_modules/@umijs/preset-umi/dist/features/icons/icons": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 6
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/icons/icons.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/icons/icons",
      "key": "icons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mock/mock": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            4
          ]
        },
        "register": 52
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/mock/mock.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mock/mock",
      "key": "mock"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/mpa/mpa.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa",
      "key": "mpa"
    },
    "./node_modules/@umijs/preset-umi/dist/features/okam/okam": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ],
          "onCheck": [
            0
          ]
        },
        "register": 3
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/okam/okam.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/okam/okam",
      "key": "okam"
    },
    "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/overrides/overrides.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides",
      "key": "overrides"
    },
    "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency",
      "key": "phantomDependency"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            2
          ]
        },
        "register": 7
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill",
      "key": "polyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill",
      "key": "publicPathPolyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/prepare/prepare.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare",
      "key": "prepare"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch",
      "key": "routePrefetch"
    },
    "./node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/stagewise/stagewise",
      "key": "stagewise"
    },
    "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/terminal/terminal.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal",
      "key": "terminal"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 16
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles",
      "key": "tmpFiles"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader",
      "key": "clientLoader"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps",
      "key": "routeProps"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/ssr/ssr.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr",
      "key": "ssr"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes",
      "key": "configTypes"
    },
    "./node_modules/@umijs/preset-umi/dist/features/transform/transform": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/transform/transform.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/transform/transform",
      "key": "transform"
    },
    "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 7
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport",
      "key": "lowImport"
    },
    "./node_modules/@umijs/preset-umi/dist/features/vite/vite": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/vite/vite.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/vite/vite",
      "key": "vite"
    },
    "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 25
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute",
      "key": "apiRoute"
    },
    "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 37
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/monorepo/redirect.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect",
      "key": "monorepoRedirect"
    },
    "./node_modules/@umijs/preset-umi/dist/features/test/test": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/test/test.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/test/test",
      "key": "test"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent",
      "key": "clickToComponent"
    },
    "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/legacy/legacy.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy",
      "key": "legacy"
    },
    "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose",
      "key": "classPropertiesLoose"
    },
    "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/webpack/webpack.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack",
      "key": "preset-umi:webpack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/swc/swc": {
      "config": {},
      "time": {
        "hooks": {
          "addOnDemandDeps": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/swc/swc.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/swc/swc",
      "key": "swc"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ui/ui": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/ui/ui.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ui/ui",
      "key": "ui"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mako/mako": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "onStart": [
            5
          ]
        },
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/mako/mako.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mako/mako",
      "key": "mako"
    },
    "./node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/utoopack/utoopack",
      "key": "utoopack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 7
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian",
      "key": "hmrGuardian"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 40
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad",
      "key": "routePreloadOnLoad"
    },
    "./node_modules/@umijs/preset-umi/dist/features/forget/forget": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/forget/forget.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/forget/forget",
      "key": "forget"
    },
    "./node_modules/@umijs/preset-umi/dist/features/bundler/bundler": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 6
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/features/bundler/bundler.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/features/bundler/bundler",
      "key": "preset-umi:bundler"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/build": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 12
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/build.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/build",
      "key": "build"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/config/config": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 68
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/config/config.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/config/config",
      "key": "config"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/dev/dev": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            22
          ],
          "onStart": [
            0
          ]
        },
        "register": 136
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/dev/dev.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/dev/dev",
      "key": "dev"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/help": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/help.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/help",
      "key": "help"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/lint": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/lint.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/lint",
      "key": "lint"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/setup": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/setup.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/setup",
      "key": "setup"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/deadcode": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/deadcode.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/deadcode",
      "key": "deadcode"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/version": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/version.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/version",
      "key": "version"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/page": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/page.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/page",
      "key": "generator:page"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/prettier.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier",
      "key": "generator:prettier"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig",
      "key": "generator:tsconfig"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/jest": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/jest.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/jest",
      "key": "generator:jest"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss",
      "key": "generator:tailwindcss"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/dva.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/dva",
      "key": "generator:dva"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/component": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/component.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/component",
      "key": "generator:component"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/mock": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/mock.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/mock",
      "key": "generator:mock"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/cypress.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress",
      "key": "generator:cypress"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/api": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/api.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/api",
      "key": "generator:api"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/generators/precommit.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit",
      "key": "generator:precommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/plugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/plugin.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/plugin",
      "key": "command:plugin"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/verify-commit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/verify-commit.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/verify-commit",
      "key": "verifyCommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/preview": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 37
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/preview.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/preview",
      "key": "preview"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu",
      "key": "mfsu-cli"
    },
    "@umijs/plugin-run": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugin-run/dist/index.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "@umijs/plugin-run",
      "key": "run"
    },
    "./node_modules/@umijs/plugins/dist/access": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/access.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/access",
      "key": "access"
    },
    "./node_modules/@umijs/plugins/dist/analytics": {
      "config": {
        "onChange": "reload"
      },
      "time": {
        "hooks": {},
        "register": 1
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/analytics.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/analytics",
      "key": "analytics"
    },
    "./node_modules/@umijs/plugins/dist/antd": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            4
          ],
          "modifyAppData": [
            0
          ]
        },
        "register": 11
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/antd.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/antd",
      "key": "antd"
    },
    "./node_modules/@umijs/plugins/dist/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 16
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/dva.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/dva",
      "key": "dva"
    },
    "./node_modules/@umijs/plugins/dist/initial-state": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/initial-state.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/initial-state",
      "key": "initialState"
    },
    "./node_modules/@umijs/plugins/dist/layout": {
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "addLayouts": [
            0
          ],
          "modifyAppData": [
            1
          ]
        },
        "register": 6
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/layout.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/layout",
      "key": "layout"
    },
    "./node_modules/@umijs/plugins/dist/locale": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 6
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/locale.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/locale",
      "key": "locale"
    },
    "./node_modules/@umijs/plugins/dist/mf": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/mf.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/mf",
      "key": "mf"
    },
    "./node_modules/@umijs/plugins/dist/model": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/model.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/model",
      "key": "model"
    },
    "./node_modules/@umijs/plugins/dist/moment2dayjs": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            2
          ]
        },
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/moment2dayjs.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/moment2dayjs",
      "key": "moment2dayjs"
    },
    "./node_modules/@umijs/plugins/dist/qiankun": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/qiankun.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/qiankun",
      "key": "qiankun"
    },
    "./node_modules/@umijs/plugins/dist/qiankun/master": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/qiankun/master.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/qiankun/master",
      "key": "qiankun-master"
    },
    "./node_modules/@umijs/plugins/dist/qiankun/slave": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 6
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/qiankun/slave.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/qiankun/slave",
      "key": "qiankun-slave"
    },
    "./node_modules/@umijs/plugins/dist/react-query": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/react-query.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/react-query",
      "key": "reactQuery"
    },
    "./node_modules/@umijs/plugins/dist/request": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/request.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/request",
      "key": "request"
    },
    "./node_modules/@umijs/plugins/dist/styled-components": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/styled-components.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/styled-components",
      "key": "styledComponents"
    },
    "./node_modules/@umijs/plugins/dist/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/tailwindcss.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/tailwindcss",
      "key": "tailwindcss"
    },
    "./node_modules/@umijs/plugins/dist/valtio": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 3
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/plugins/dist/valtio.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/plugins/dist/valtio",
      "key": "valtio"
    },
    "./node_modules/@umijs/max/dist/plugins/maxAlias": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/max/dist/plugins/maxAlias.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/max/dist/plugins/maxAlias",
      "key": "maxAlias"
    },
    "./node_modules/@umijs/max/dist/plugins/maxAppData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ]
        },
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/max/dist/plugins/maxAppData.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/max/dist/plugins/maxAppData",
      "key": "maxAppData"
    },
    "./node_modules/@umijs/max/dist/plugins/maxChecker": {
      "config": {},
      "time": {
        "hooks": {
          "onCheckPkgJSON": [
            0
          ]
        },
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/max/dist/plugins/maxChecker.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/max/dist/plugins/maxChecker",
      "key": "maxChecker"
    },
    "./node_modules/umi-presets-pro/dist/features/proconfig": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 0
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/umi-presets-pro/dist/features/proconfig.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/umi-presets-pro/dist/features/proconfig",
      "key": "proconfig"
    },
    "./node_modules/umi-presets-pro/dist/features/maxtabs": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/umi-presets-pro/dist/features/maxtabs.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/umi-presets-pro/dist/features/maxtabs",
      "key": "maxtabs"
    },
    "@umijs/max-plugin-openapi": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            1
          ],
          "onStart": [
            0
          ]
        },
        "register": 496
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/max-plugin-openapi/dist/index.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "@umijs/max-plugin-openapi",
      "key": "openAPI"
    },
    "./node_modules/@alita/plugins/dist/keepalive": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 325
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@alita/plugins/dist/keepalive.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@alita/plugins/dist/keepalive",
      "key": "keepalive"
    },
    "./node_modules/@alita/plugins/dist/tabs-layout": {
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "time": {
        "hooks": {},
        "register": 0
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@alita/plugins/dist/tabs-layout.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@alita/plugins/dist/tabs-layout",
      "key": "tabsLayout"
    },
    "@umijs/request-record": {
      "config": {
        "default": {
          "mock": {
            "outputDir": "./mock",
            "fileName": "requestRecord.mock.js",
            "usingRole": "default"
          },
          "outputDir": "./types"
        }
      },
      "time": {
        "hooks": {},
        "register": 79
      },
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/request-record/dist/cjs/index.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "@umijs/request-record",
      "key": "requestRecord"
    },
    "./node_modules/@umijs/core/dist/service/generatePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 2
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@umijs/core/dist/service/generatePlugin.js",
      "cwd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter",
      "id": "./node_modules/@umijs/core/dist/service/generatePlugin",
      "key": "generatePlugin"
    }
  },
  "presets": [],
  "name": "dev",
  "args": {
    "_": []
  },
  "userConfig": {
    "hash": true,
    "publicPath": "/",
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "name": "login",
            "path": "/user/login",
            "component": "./user/login"
          }
        ]
      },
      {
        "path": "/welcome",
        "name": "welcome",
        "icon": "smile",
        "component": "./Welcome"
      },
      {
        "path": "/user-info",
        "name": "用户信息",
        "icon": "bug",
        "component": "./UserInfo"
      },
      {
        "path": "/admin",
        "name": "admin",
        "icon": "crown",
        "access": "canAdmin",
        "routes": [
          {
            "path": "/admin",
            "redirect": "/admin/sub-page"
          },
          {
            "path": "/admin/sub-page",
            "name": "sub-page",
            "component": "./Admin"
          }
        ]
      },
      {
        "name": "list.table-list",
        "icon": "table",
        "path": "/list",
        "component": "./table-list"
      },
      {
        "path": "/AI/calendar",
        "icon": "calendar",
        "name": "日程管理",
        "component": "./AI/Calendar"
      },
      {
        "path": "/AI",
        "name": "AI",
        "icon": "robot",
        "routes": [
          {
            "path": "/AI/document-writer",
            "name": "AI 公文生成器",
            "component": "./AI/DocumentWriter"
          },
          {
            "path": "/AI/translator",
            "name": "AI 翻译",
            "component": "./AI/Translator"
          },
          {
            "path": "/AI/meeting-assistant",
            "name": "AI 会议助手",
            "component": "./AI/MeetingAssistant"
          }
        ]
      },
      {
        "path": "/",
        "redirect": "/welcome"
      },
      {
        "component": "404",
        "layout": false,
        "path": "./*"
      }
    ],
    "ignoreMomentLocale": true,
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "AI 文档助手",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {
      "appConfig": {},
      "configProvider": {
        "theme": {
          "cssVar": true,
          "token": {
            "fontFamily": "AlibabaSans, sans-serif"
          }
        }
      }
    },
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "\\scripts\\loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\config\\oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger"
      }
    ],
    "mock": {
      "include": [
        "mock/**/*",
        "src/pages/**/_mock.ts"
      ]
    },
    "mako": {},
    "esbuildMinifyIIFE": true,
    "requestRecord": {},
    "exportStatic": {},
    "define": {}
  },
  "mainConfigFile": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\config\\config.ts",
  "config": {
    "routeLoader": {
      "moduleType": "esm"
    },
    "mountElementId": "root",
    "history": {
      "type": "browser"
    },
    "base": "/",
    "svgr": {},
    "publicPath": "/",
    "mfsu": false,
    "ignoreMomentLocale": true,
    "externals": {},
    "autoCSSModules": true,
    "alias": {
      "umi": "@@/exports",
      "react": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react",
      "react-dom": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-dom",
      "react-router": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-router",
      "react-router-dom": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-router-dom",
      "@": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src",
      "@@": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/.umi",
      "regenerator-runtime": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\@umijs\\preset-umi\\node_modules\\regenerator-runtime",
      "antd": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\antd",
      "moment": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\dayjs",
      "@umijs/max": "@@/exports"
    },
    "requestRecord": {
      "mock": {
        "outputDir": "./mock",
        "fileName": "requestRecord.mock.js",
        "usingRole": "default"
      },
      "outputDir": "./types"
    },
    "hash": true,
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "name": "login",
            "path": "/user/login",
            "component": "./user/login"
          }
        ]
      },
      {
        "path": "/welcome",
        "name": "welcome",
        "icon": "smile",
        "component": "./Welcome"
      },
      {
        "path": "/user-info",
        "name": "用户信息",
        "icon": "bug",
        "component": "./UserInfo"
      },
      {
        "path": "/admin",
        "name": "admin",
        "icon": "crown",
        "access": "canAdmin",
        "routes": [
          {
            "path": "/admin",
            "redirect": "/admin/sub-page"
          },
          {
            "path": "/admin/sub-page",
            "name": "sub-page",
            "component": "./Admin"
          }
        ]
      },
      {
        "name": "list.table-list",
        "icon": "table",
        "path": "/list",
        "component": "./table-list"
      },
      {
        "path": "/AI/calendar",
        "icon": "calendar",
        "name": "日程管理",
        "component": "./AI/Calendar"
      },
      {
        "path": "/AI",
        "name": "AI",
        "icon": "robot",
        "routes": [
          {
            "path": "/AI/document-writer",
            "name": "AI 公文生成器",
            "component": "./AI/DocumentWriter"
          },
          {
            "path": "/AI/translator",
            "name": "AI 翻译",
            "component": "./AI/Translator"
          },
          {
            "path": "/AI/meeting-assistant",
            "name": "AI 会议助手",
            "component": "./AI/MeetingAssistant"
          }
        ]
      },
      {
        "path": "/",
        "redirect": "/welcome"
      },
      {
        "component": "404",
        "layout": false,
        "path": "./*"
      }
    ],
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "AI 文档助手",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {
      "appConfig": {},
      "configProvider": {
        "theme": {
          "cssVar": true,
          "token": {
            "fontFamily": "AlibabaSans, sans-serif"
          }
        }
      }
    },
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "\\scripts\\loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\config\\oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger"
      }
    ],
    "mock": {
      "include": [
        "mock/**/*",
        "src/pages/**/_mock.ts"
      ]
    },
    "mako": {
      "plugins": [
        {
          "name": "UmiHtmlGenerationMako"
        }
      ]
    },
    "esbuildMinifyIIFE": true,
    "exportStatic": {},
    "define": {
      "ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION": "",
      "REACT_APP_ENV": false
    },
    "targets": {
      "chrome": 80
    },
    "hmrGuardian": false,
    "theme": {
      "blue-base": "#1890ff",
      "blue-1": "#e6f7ff",
      "blue-2": "#bae7ff",
      "blue-3": "#91d5ff",
      "blue-4": "#69c0ff",
      "blue-5": "#40a9ff",
      "blue-6": "#1890ff",
      "blue-7": "#096dd9",
      "blue-8": "#0050b3",
      "blue-9": "#003a8c",
      "blue-10": "#002766",
      "purple-base": "#722ed1",
      "purple-1": "#f9f0ff",
      "purple-2": "#efdbff",
      "purple-3": "#d3adf7",
      "purple-4": "#b37feb",
      "purple-5": "#9254de",
      "purple-6": "#722ed1",
      "purple-7": "#531dab",
      "purple-8": "#391085",
      "purple-9": "#22075e",
      "purple-10": "#120338",
      "cyan-base": "#13c2c2",
      "cyan-1": "#e6fffb",
      "cyan-2": "#b5f5ec",
      "cyan-3": "#87e8de",
      "cyan-4": "#5cdbd3",
      "cyan-5": "#36cfc9",
      "cyan-6": "#13c2c2",
      "cyan-7": "#08979c",
      "cyan-8": "#006d75",
      "cyan-9": "#00474f",
      "cyan-10": "#002329",
      "green-base": "#52c41a",
      "green-1": "#f6ffed",
      "green-2": "#d9f7be",
      "green-3": "#b7eb8f",
      "green-4": "#95de64",
      "green-5": "#73d13d",
      "green-6": "#52c41a",
      "green-7": "#389e0d",
      "green-8": "#237804",
      "green-9": "#135200",
      "green-10": "#092b00",
      "magenta-base": "#eb2f96",
      "magenta-1": "#fff0f6",
      "magenta-2": "#ffd6e7",
      "magenta-3": "#ffadd2",
      "magenta-4": "#ff85c0",
      "magenta-5": "#f759ab",
      "magenta-6": "#eb2f96",
      "magenta-7": "#c41d7f",
      "magenta-8": "#9e1068",
      "magenta-9": "#780650",
      "magenta-10": "#520339",
      "pink-base": "#eb2f96",
      "pink-1": "#fff0f6",
      "pink-2": "#ffd6e7",
      "pink-3": "#ffadd2",
      "pink-4": "#ff85c0",
      "pink-5": "#f759ab",
      "pink-6": "#eb2f96",
      "pink-7": "#c41d7f",
      "pink-8": "#9e1068",
      "pink-9": "#780650",
      "pink-10": "#520339",
      "red-base": "#f5222d",
      "red-1": "#fff1f0",
      "red-2": "#ffccc7",
      "red-3": "#ffa39e",
      "red-4": "#ff7875",
      "red-5": "#ff4d4f",
      "red-6": "#f5222d",
      "red-7": "#cf1322",
      "red-8": "#a8071a",
      "red-9": "#820014",
      "red-10": "#5c0011",
      "orange-base": "#fa8c16",
      "orange-1": "#fff7e6",
      "orange-2": "#ffe7ba",
      "orange-3": "#ffd591",
      "orange-4": "#ffc069",
      "orange-5": "#ffa940",
      "orange-6": "#fa8c16",
      "orange-7": "#d46b08",
      "orange-8": "#ad4e00",
      "orange-9": "#873800",
      "orange-10": "#612500",
      "yellow-base": "#fadb14",
      "yellow-1": "#feffe6",
      "yellow-2": "#ffffb8",
      "yellow-3": "#fffb8f",
      "yellow-4": "#fff566",
      "yellow-5": "#ffec3d",
      "yellow-6": "#fadb14",
      "yellow-7": "#d4b106",
      "yellow-8": "#ad8b00",
      "yellow-9": "#876800",
      "yellow-10": "#614700",
      "volcano-base": "#fa541c",
      "volcano-1": "#fff2e8",
      "volcano-2": "#ffd8bf",
      "volcano-3": "#ffbb96",
      "volcano-4": "#ff9c6e",
      "volcano-5": "#ff7a45",
      "volcano-6": "#fa541c",
      "volcano-7": "#d4380d",
      "volcano-8": "#ad2102",
      "volcano-9": "#871400",
      "volcano-10": "#610b00",
      "geekblue-base": "#2f54eb",
      "geekblue-1": "#f0f5ff",
      "geekblue-2": "#d6e4ff",
      "geekblue-3": "#adc6ff",
      "geekblue-4": "#85a5ff",
      "geekblue-5": "#597ef7",
      "geekblue-6": "#2f54eb",
      "geekblue-7": "#1d39c4",
      "geekblue-8": "#10239e",
      "geekblue-9": "#061178",
      "geekblue-10": "#030852",
      "lime-base": "#a0d911",
      "lime-1": "#fcffe6",
      "lime-2": "#f4ffb8",
      "lime-3": "#eaff8f",
      "lime-4": "#d3f261",
      "lime-5": "#bae637",
      "lime-6": "#a0d911",
      "lime-7": "#7cb305",
      "lime-8": "#5b8c00",
      "lime-9": "#3f6600",
      "lime-10": "#254000",
      "gold-base": "#faad14",
      "gold-1": "#fffbe6",
      "gold-2": "#fff1b8",
      "gold-3": "#ffe58f",
      "gold-4": "#ffd666",
      "gold-5": "#ffc53d",
      "gold-6": "#faad14",
      "gold-7": "#d48806",
      "gold-8": "#ad6800",
      "gold-9": "#874d00",
      "gold-10": "#613400",
      "preset-colors": "pink, magenta, red, volcano, orange, yellow, gold, cyan, lime, green, blue, geekblue,",
      "theme": "default",
      "ant-prefix": "ant",
      "html-selector": "html",
      "primary-color": "#1890ff",
      "primary-color-hover": "#40a9ff",
      "primary-color-active": "#096dd9",
      "primary-color-outline": "rgba(24, 144, 255, 0.2)",
      "processing-color": "#1890ff",
      "info-color": "#1890ff",
      "info-color-deprecated-bg": "#e6f7ff",
      "info-color-deprecated-border": "#91d5ff",
      "success-color": "#52c41a",
      "success-color-hover": "#73d13d",
      "success-color-active": "#389e0d",
      "success-color-outline": "rgba(82, 196, 26, 0.2)",
      "success-color-deprecated-bg": "#f6ffed",
      "success-color-deprecated-border": "#b7eb8f",
      "warning-color": "#faad14",
      "warning-color-hover": "#ffc53d",
      "warning-color-active": "#d48806",
      "warning-color-outline": "rgba(250, 173, 20, 0.2)",
      "warning-color-deprecated-bg": "#fffbe6",
      "warning-color-deprecated-border": "#ffe58f",
      "error-color": "#ff4d4f",
      "error-color-hover": "#ff7875",
      "error-color-active": "#d9363e",
      "error-color-outline": "rgba(255, 77, 79, 0.2)",
      "error-color-deprecated-bg": "#fff2f0",
      "error-color-deprecated-border": "#ffccc7",
      "highlight-color": "#ff4d4f",
      "normal-color": "#d9d9d9",
      "white": "#fff",
      "black": "#000",
      "primary-1": "#e6f7ff",
      "primary-2": "#bae7ff",
      "primary-3": "#91d5ff",
      "primary-4": "#69c0ff",
      "primary-5": "#40a9ff",
      "primary-6": "#1890ff",
      "primary-7": "#096dd9",
      "primary-8": "#0050b3",
      "primary-9": "#003a8c",
      "primary-10": "#002766",
      "component-background": "#fff",
      "popover-background": "#fff",
      "popover-customize-border-color": "#f0f0f0",
      "font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "code-family": "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
      "text-color": "rgba(0, 0, 0, 0.85)",
      "text-color-secondary": "rgba(0, 0, 0, 0.45)",
      "text-color-inverse": "#fff",
      "icon-color": "inherit",
      "icon-color-hover": "rgba(0, 0, 0, 0.75)",
      "heading-color": "rgba(0, 0, 0, 0.85)",
      "text-color-dark": "rgba(255, 255, 255, 0.85)",
      "text-color-secondary-dark": "rgba(255, 255, 255, 0.65)",
      "text-selection-bg": "#1890ff",
      "font-variant-base": "tabular-nums",
      "font-feature-settings-base": "tnum",
      "font-size-base": "14px",
      "font-size-lg": "16px",
      "font-size-sm": "12px",
      "heading-1-size": "38px",
      "heading-2-size": "30px",
      "heading-3-size": "24px",
      "heading-4-size": "20px",
      "heading-5-size": "16px",
      "line-height-base": "1.5715",
      "border-radius-base": "2px",
      "border-radius-sm": "2px",
      "control-border-radius": "2px",
      "arrow-border-radius": "2px",
      "padding-lg": "24px",
      "padding-md": "16px",
      "padding-sm": "12px",
      "padding-xs": "8px",
      "padding-xss": "4px",
      "control-padding-horizontal": "12px",
      "control-padding-horizontal-sm": "8px",
      "margin-lg": "24px",
      "margin-md": "16px",
      "margin-sm": "12px",
      "margin-xs": "8px",
      "margin-xss": "4px",
      "height-base": "32px",
      "height-lg": "40px",
      "height-sm": "24px",
      "item-active-bg": "#e6f7ff",
      "item-hover-bg": "#f5f5f5",
      "iconfont-css-prefix": "anticon",
      "link-color": "#1890ff",
      "link-hover-color": "#40a9ff",
      "link-active-color": "#096dd9",
      "link-decoration": "none",
      "link-hover-decoration": "none",
      "link-focus-decoration": "none",
      "link-focus-outline": "0",
      "ease-base-out": "cubic-bezier(0.7, 0.3, 0.1, 1)",
      "ease-base-in": "cubic-bezier(0.9, 0, 0.3, 0.7)",
      "ease-out": "cubic-bezier(0.215, 0.61, 0.355, 1)",
      "ease-in": "cubic-bezier(0.55, 0.055, 0.675, 0.19)",
      "ease-in-out": "cubic-bezier(0.645, 0.045, 0.355, 1)",
      "ease-out-back": "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
      "ease-in-back": "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
      "ease-in-out-back": "cubic-bezier(0.71, -0.46, 0.29, 1.46)",
      "ease-out-circ": "cubic-bezier(0.08, 0.82, 0.17, 1)",
      "ease-in-circ": "cubic-bezier(0.6, 0.04, 0.98, 0.34)",
      "ease-in-out-circ": "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
      "ease-out-quint": "cubic-bezier(0.23, 1, 0.32, 1)",
      "ease-in-quint": "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
      "ease-in-out-quint": "cubic-bezier(0.86, 0, 0.07, 1)",
      "border-color-base": "#d9d9d9",
      "border-color-split": "#f0f0f0",
      "border-color-inverse": "#fff",
      "border-width-base": "1px",
      "border-style-base": "solid",
      "outline-blur-size": "0",
      "outline-width": "2px",
      "outline-color": "#1890ff",
      "outline-fade": "20%",
      "background-color-light": "#fafafa",
      "background-color-base": "#f5f5f5",
      "disabled-color": "rgba(0, 0, 0, 0.25)",
      "disabled-bg": "#f5f5f5",
      "disabled-active-bg": "#e6e6e6",
      "disabled-color-dark": "rgba(255, 255, 255, 0.35)",
      "shadow-color": "rgba(0, 0, 0, 0.15)",
      "shadow-color-inverse": "#fff",
      "box-shadow-base": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "shadow-1-up": "0 -6px 16px -8px rgba(0, 0, 0, 0.08), 0 -9px 28px 0 rgba(0, 0, 0, 0.05), 0 -12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-down": "0 6px 16px -8px rgba(0, 0, 0, 0.08), 0 9px 28px 0 rgba(0, 0, 0, 0.05), 0 12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-left": "-6px 0 16px -8px rgba(0, 0, 0, 0.08), -9px 0 28px 0 rgba(0, 0, 0, 0.05), -12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-right": "6px 0 16px -8px rgba(0, 0, 0, 0.08), 9px 0 28px 0 rgba(0, 0, 0, 0.05), 12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-2": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "btn-font-weight": "400",
      "btn-border-radius-base": "2px",
      "btn-border-radius-sm": "2px",
      "btn-border-width": "1px",
      "btn-border-style": "solid",
      "btn-shadow": "0 2px 0 rgba(0, 0, 0, 0.015)",
      "btn-primary-shadow": "0 2px 0 rgba(0, 0, 0, 0.045)",
      "btn-text-shadow": "0 -1px 0 rgba(0, 0, 0, 0.12)",
      "btn-primary-color": "#fff",
      "btn-primary-bg": "#1890ff",
      "btn-default-color": "rgba(0, 0, 0, 0.85)",
      "btn-default-bg": "#fff",
      "btn-default-border": "#d9d9d9",
      "btn-danger-color": "#fff",
      "btn-danger-bg": "#ff4d4f",
      "btn-danger-border": "#ff4d4f",
      "btn-disable-color": "rgba(0, 0, 0, 0.25)",
      "btn-disable-bg": "#f5f5f5",
      "btn-disable-border": "#d9d9d9",
      "btn-default-ghost-color": "#fff",
      "btn-default-ghost-bg": "transparent",
      "btn-default-ghost-border": "#fff",
      "btn-font-size-lg": "16px",
      "btn-font-size-sm": "14px",
      "btn-padding-horizontal-base": "15px",
      "btn-padding-horizontal-lg": "15px",
      "btn-padding-horizontal-sm": "7px",
      "btn-height-base": "32px",
      "btn-height-lg": "40px",
      "btn-height-sm": "24px",
      "btn-line-height": "1.5715",
      "btn-circle-size": "32px",
      "btn-circle-size-lg": "40px",
      "btn-circle-size-sm": "24px",
      "btn-square-size": "32px",
      "btn-square-size-lg": "40px",
      "btn-square-size-sm": "24px",
      "btn-square-only-icon-size": "16px",
      "btn-square-only-icon-size-sm": "14px",
      "btn-square-only-icon-size-lg": "18px",
      "btn-group-border": "#40a9ff",
      "btn-link-hover-bg": "transparent",
      "btn-text-hover-bg": "rgba(0, 0, 0, 0.018)",
      "checkbox-size": "16px",
      "checkbox-color": "#1890ff",
      "checkbox-check-color": "#fff",
      "checkbox-check-bg": "#fff",
      "checkbox-border-width": "1px",
      "checkbox-border-radius": "2px",
      "checkbox-group-item-margin-right": "8px",
      "descriptions-bg": "#fafafa",
      "descriptions-title-margin-bottom": "20px",
      "descriptions-default-padding": "16px 24px",
      "descriptions-middle-padding": "12px 24px",
      "descriptions-small-padding": "8px 16px",
      "descriptions-item-padding-bottom": "16px",
      "descriptions-item-trailing-colon": "true",
      "descriptions-item-label-colon-margin-right": "8px",
      "descriptions-item-label-colon-margin-left": "2px",
      "descriptions-extra-color": "rgba(0, 0, 0, 0.85)",
      "divider-text-padding": "1em",
      "divider-orientation-margin": "5%",
      "divider-color": "rgba(0, 0, 0, 0.06)",
      "divider-vertical-gutter": "8px",
      "dropdown-selected-color": "#1890ff",
      "dropdown-menu-submenu-disabled-bg": "#fff",
      "dropdown-selected-bg": "#e6f7ff",
      "empty-font-size": "14px",
      "radio-size": "16px",
      "radio-top": "0.2em",
      "radio-border-width": "1px",
      "radio-dot-size": "8px",
      "radio-dot-color": "#1890ff",
      "radio-dot-disabled-color": "rgba(0, 0, 0, 0.2)",
      "radio-solid-checked-color": "#fff",
      "radio-button-bg": "#fff",
      "radio-button-checked-bg": "#fff",
      "radio-button-color": "rgba(0, 0, 0, 0.85)",
      "radio-button-hover-color": "#40a9ff",
      "radio-button-active-color": "#096dd9",
      "radio-button-padding-horizontal": "15px",
      "radio-disabled-button-checked-bg": "#e6e6e6",
      "radio-disabled-button-checked-color": "rgba(0, 0, 0, 0.25)",
      "radio-wrapper-margin-right": "8px",
      "screen-xs": "480px",
      "screen-xs-min": "480px",
      "screen-sm": "576px",
      "screen-sm-min": "576px",
      "screen-md": "768px",
      "screen-md-min": "768px",
      "screen-lg": "992px",
      "screen-lg-min": "992px",
      "screen-xl": "1200px",
      "screen-xl-min": "1200px",
      "screen-xxl": "1600px",
      "screen-xxl-min": "1600px",
      "screen-xs-max": "575px",
      "screen-sm-max": "767px",
      "screen-md-max": "991px",
      "screen-lg-max": "1199px",
      "screen-xl-max": "1599px",
      "grid-columns": "24",
      "layout-header-background": "#001529",
      "layout-header-height": "64px",
      "layout-header-padding": "0 50px",
      "layout-header-color": "rgba(0, 0, 0, 0.85)",
      "layout-footer-padding": "24px 50px",
      "layout-footer-background": "#f0f2f5",
      "layout-sider-background": "#001529",
      "layout-trigger-height": "48px",
      "layout-trigger-background": "#002140",
      "layout-trigger-color": "#fff",
      "layout-zero-trigger-width": "36px",
      "layout-zero-trigger-height": "42px",
      "layout-sider-background-light": "#fff",
      "layout-trigger-background-light": "#fff",
      "layout-trigger-color-light": "rgba(0, 0, 0, 0.85)",
      "zindex-badge": "auto",
      "zindex-table-fixed": "2",
      "zindex-affix": "10",
      "zindex-back-top": "10",
      "zindex-picker-panel": "10",
      "zindex-popup-close": "10",
      "zindex-modal": "1000",
      "zindex-modal-mask": "1000",
      "zindex-message": "1010",
      "zindex-notification": "1010",
      "zindex-popover": "1030",
      "zindex-dropdown": "1050",
      "zindex-picker": "1050",
      "zindex-popoconfirm": "1060",
      "zindex-tooltip": "1070",
      "zindex-image": "1080",
      "animation-duration-slow": "0.3s",
      "animation-duration-base": "0.2s",
      "animation-duration-fast": "0.1s",
      "collapse-panel-border-radius": "2px",
      "dropdown-menu-bg": "#fff",
      "dropdown-vertical-padding": "5px",
      "dropdown-edge-child-vertical-padding": "4px",
      "dropdown-font-size": "14px",
      "dropdown-line-height": "22px",
      "label-required-color": "#ff4d4f",
      "label-color": "rgba(0, 0, 0, 0.85)",
      "form-warning-input-bg": "#fff",
      "form-item-margin-bottom": "24px",
      "form-item-trailing-colon": "true",
      "form-vertical-label-padding": "0 0 8px",
      "form-vertical-label-margin": "0",
      "form-item-label-font-size": "14px",
      "form-item-label-height": "32px",
      "form-item-label-colon-margin-right": "8px",
      "form-item-label-colon-margin-left": "2px",
      "form-error-input-bg": "#fff",
      "input-height-base": "32px",
      "input-height-lg": "40px",
      "input-height-sm": "24px",
      "input-padding-horizontal": "11px",
      "input-padding-horizontal-base": "11px",
      "input-padding-horizontal-sm": "7px",
      "input-padding-horizontal-lg": "11px",
      "input-padding-vertical-base": "4px",
      "input-padding-vertical-sm": "0px",
      "input-padding-vertical-lg": "6.5px",
      "input-placeholder-color": "#bfbfbf",
      "input-color": "rgba(0, 0, 0, 0.85)",
      "input-icon-color": "rgba(0, 0, 0, 0.85)",
      "input-border-color": "#d9d9d9",
      "input-bg": "#fff",
      "input-number-hover-border-color": "#40a9ff",
      "input-number-handler-active-bg": "#f4f4f4",
      "input-number-handler-hover-bg": "#40a9ff",
      "input-number-handler-bg": "#fff",
      "input-number-handler-border-color": "#d9d9d9",
      "input-addon-bg": "#fafafa",
      "input-hover-border-color": "#40a9ff",
      "input-disabled-bg": "#f5f5f5",
      "input-outline-offset": "0 0",
      "input-icon-hover-color": "rgba(0, 0, 0, 0.85)",
      "input-disabled-color": "rgba(0, 0, 0, 0.25)",
      "mentions-dropdown-bg": "#fff",
      "mentions-dropdown-menu-item-hover-bg": "#fff",
      "select-border-color": "#d9d9d9",
      "select-item-selected-color": "rgba(0, 0, 0, 0.85)",
      "select-item-selected-font-weight": "600",
      "select-dropdown-bg": "#fff",
      "select-item-selected-bg": "#e6f7ff",
      "select-item-active-bg": "#f5f5f5",
      "select-dropdown-vertical-padding": "5px",
      "select-dropdown-font-size": "14px",
      "select-dropdown-line-height": "22px",
      "select-dropdown-height": "32px",
      "select-background": "#fff",
      "select-clear-background": "#fff",
      "select-selection-item-bg": "#f5f5f5",
      "select-selection-item-border-color": "#f0f0f0",
      "select-single-item-height-lg": "40px",
      "select-multiple-item-height": "24px",
      "select-multiple-item-height-lg": "32px",
      "select-multiple-item-spacing-half": "2px",
      "select-multiple-disabled-background": "#f5f5f5",
      "select-multiple-item-disabled-color": "#bfbfbf",
      "select-multiple-item-disabled-border-color": "#d9d9d9",
      "cascader-bg": "#fff",
      "cascader-item-selected-bg": "#e6f7ff",
      "cascader-menu-bg": "#fff",
      "cascader-menu-border-color-split": "#f0f0f0",
      "cascader-dropdown-vertical-padding": "5px",
      "cascader-dropdown-edge-child-vertical-padding": "4px",
      "cascader-dropdown-font-size": "14px",
      "cascader-dropdown-line-height": "22px",
      "anchor-bg": "transparent",
      "anchor-border-color": "#f0f0f0",
      "anchor-link-top": "4px",
      "anchor-link-left": "16px",
      "anchor-link-padding": "4px 0 4px 16px",
      "tooltip-max-width": "250px",
      "tooltip-color": "#fff",
      "tooltip-bg": "rgba(0, 0, 0, 0.75)",
      "tooltip-arrow-width": "11.3137085px",
      "tooltip-distance": "14.3137085px",
      "tooltip-arrow-color": "rgba(0, 0, 0, 0.75)",
      "tooltip-border-radius": "2px",
      "popover-bg": "#fff",
      "popover-color": "rgba(0, 0, 0, 0.85)",
      "popover-min-width": "177px",
      "popover-min-height": "32px",
      "popover-arrow-width": "11.3137085px",
      "popover-arrow-color": "#fff",
      "popover-arrow-outer-color": "#fff",
      "popover-distance": "15.3137085px",
      "popover-padding-horizontal": "16px",
      "modal-header-padding-vertical": "16px",
      "modal-header-padding-horizontal": "24px",
      "modal-header-bg": "#fff",
      "modal-header-padding": "16px 24px",
      "modal-header-border-width": "1px",
      "modal-header-border-style": "solid",
      "modal-header-title-line-height": "22px",
      "modal-header-title-font-size": "16px",
      "modal-header-border-color-split": "#f0f0f0",
      "modal-header-close-size": "54px",
      "modal-content-bg": "#fff",
      "modal-heading-color": "rgba(0, 0, 0, 0.85)",
      "modal-close-color": "rgba(0, 0, 0, 0.45)",
      "modal-footer-bg": "transparent",
      "modal-footer-border-color-split": "#f0f0f0",
      "modal-footer-border-style": "solid",
      "modal-footer-padding-vertical": "10px",
      "modal-footer-padding-horizontal": "16px",
      "modal-footer-border-width": "1px",
      "modal-mask-bg": "rgba(0, 0, 0, 0.45)",
      "modal-confirm-title-font-size": "16px",
      "modal-border-radius": "2px",
      "progress-default-color": "#1890ff",
      "progress-remaining-color": "#f5f5f5",
      "progress-info-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-radius": "100px",
      "progress-steps-item-bg": "#f3f3f3",
      "progress-text-font-size": "1em",
      "progress-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-circle-text-font-size": "1em",
      "menu-inline-toplevel-item-height": "40px",
      "menu-item-height": "40px",
      "menu-item-group-height": "1.5715",
      "menu-collapsed-width": "80px",
      "menu-bg": "#fff",
      "menu-popup-bg": "#fff",
      "menu-item-color": "rgba(0, 0, 0, 0.85)",
      "menu-inline-submenu-bg": "#fafafa",
      "menu-highlight-color": "#1890ff",
      "menu-highlight-danger-color": "#ff4d4f",
      "menu-item-active-bg": "#e6f7ff",
      "menu-item-active-danger-bg": "#fff1f0",
      "menu-item-active-border-width": "3px",
      "menu-item-group-title-color": "rgba(0, 0, 0, 0.45)",
      "menu-item-vertical-margin": "4px",
      "menu-item-font-size": "14px",
      "menu-item-boundary-margin": "8px",
      "menu-item-padding-horizontal": "20px",
      "menu-item-padding": "0 20px",
      "menu-horizontal-line-height": "46px",
      "menu-icon-margin-right": "10px",
      "menu-icon-size": "14px",
      "menu-icon-size-lg": "16px",
      "menu-item-group-title-font-size": "14px",
      "menu-dark-color": "rgba(255, 255, 255, 0.65)",
      "menu-dark-danger-color": "#ff4d4f",
      "menu-dark-bg": "#001529",
      "menu-dark-arrow-color": "#fff",
      "menu-dark-inline-submenu-bg": "#000c17",
      "menu-dark-highlight-color": "#fff",
      "menu-dark-item-active-bg": "#1890ff",
      "menu-dark-item-active-danger-bg": "#ff4d4f",
      "menu-dark-selected-item-icon-color": "#fff",
      "menu-dark-selected-item-text-color": "#fff",
      "menu-dark-item-hover-bg": "transparent",
      "spin-dot-size-sm": "14px",
      "spin-dot-size": "20px",
      "spin-dot-size-lg": "32px",
      "table-bg": "#fff",
      "table-header-bg": "#fafafa",
      "table-header-color": "rgba(0, 0, 0, 0.85)",
      "table-header-sort-bg": "#f5f5f5",
      "table-row-hover-bg": "#fafafa",
      "table-selected-row-color": "inherit",
      "table-selected-row-bg": "#e6f7ff",
      "table-selected-row-hover-bg": "#dcf4ff",
      "table-expanded-row-bg": "#fbfbfb",
      "table-padding-vertical": "16px",
      "table-padding-horizontal": "16px",
      "table-padding-vertical-md": "12px",
      "table-padding-horizontal-md": "8px",
      "table-padding-vertical-sm": "8px",
      "table-padding-horizontal-sm": "8px",
      "table-border-color": "#f0f0f0",
      "table-border-radius-base": "2px",
      "table-footer-bg": "#fafafa",
      "table-footer-color": "rgba(0, 0, 0, 0.85)",
      "table-header-bg-sm": "#fafafa",
      "table-font-size": "14px",
      "table-font-size-md": "14px",
      "table-font-size-sm": "14px",
      "table-header-cell-split-color": "rgba(0, 0, 0, 0.06)",
      "table-header-sort-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-fixed-header-sort-active-bg": "#f5f5f5",
      "table-header-filter-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-filter-btns-bg": "inherit",
      "table-filter-dropdown-bg": "#fff",
      "table-expand-icon-bg": "#fff",
      "table-selection-column-width": "32px",
      "table-sticky-scroll-bar-bg": "rgba(0, 0, 0, 0.35)",
      "table-sticky-scroll-bar-radius": "4px",
      "tag-border-radius": "2px",
      "tag-default-bg": "#fafafa",
      "tag-default-color": "rgba(0, 0, 0, 0.85)",
      "tag-font-size": "12px",
      "tag-line-height": "20px",
      "picker-bg": "#fff",
      "picker-basic-cell-hover-color": "#f5f5f5",
      "picker-basic-cell-active-with-range-color": "#e6f7ff",
      "picker-basic-cell-hover-with-range-color": "#cbe6ff",
      "picker-basic-cell-disabled-bg": "rgba(0, 0, 0, 0.04)",
      "picker-border-color": "#f0f0f0",
      "picker-date-hover-range-border-color": "#7ec1ff",
      "picker-date-hover-range-color": "#cbe6ff",
      "picker-time-panel-column-width": "56px",
      "picker-time-panel-column-height": "224px",
      "picker-time-panel-cell-height": "28px",
      "picker-panel-cell-height": "24px",
      "picker-panel-cell-width": "36px",
      "picker-text-height": "40px",
      "picker-panel-without-time-cell-height": "66px",
      "calendar-bg": "#fff",
      "calendar-input-bg": "#fff",
      "calendar-border-color": "#fff",
      "calendar-item-active-bg": "#e6f7ff",
      "calendar-column-active-bg": "rgba(230, 247, 255, 0.2)",
      "calendar-full-bg": "#fff",
      "calendar-full-panel-bg": "#fff",
      "carousel-dot-width": "16px",
      "carousel-dot-height": "3px",
      "carousel-dot-active-width": "24px",
      "badge-height": "20px",
      "badge-height-sm": "14px",
      "badge-dot-size": "6px",
      "badge-font-size": "12px",
      "badge-font-size-sm": "12px",
      "badge-font-weight": "normal",
      "badge-status-size": "6px",
      "badge-text-color": "#fff",
      "badge-color": "#ff4d4f",
      "rate-star-color": "#fadb14",
      "rate-star-bg": "#f0f0f0",
      "rate-star-size": "20px",
      "rate-star-hover-scale": "scale(1.1)",
      "card-head-color": "rgba(0, 0, 0, 0.85)",
      "card-head-background": "transparent",
      "card-head-font-size": "16px",
      "card-head-font-size-sm": "14px",
      "card-head-padding": "16px",
      "card-head-padding-sm": "8px",
      "card-head-height": "48px",
      "card-head-height-sm": "36px",
      "card-inner-head-padding": "12px",
      "card-padding-base": "24px",
      "card-padding-base-sm": "12px",
      "card-actions-background": "#fff",
      "card-actions-li-margin": "12px 0",
      "card-skeleton-bg": "#cfd8dc",
      "card-background": "#fff",
      "card-shadow": "0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12), 0 5px 12px 4px rgba(0, 0, 0, 0.09)",
      "card-radius": "2px",
      "card-head-tabs-margin-bottom": "-17px",
      "card-head-extra-color": "rgba(0, 0, 0, 0.85)",
      "comment-bg": "inherit",
      "comment-padding-base": "16px 0",
      "comment-nest-indent": "44px",
      "comment-font-size-base": "14px",
      "comment-font-size-sm": "12px",
      "comment-author-name-color": "rgba(0, 0, 0, 0.45)",
      "comment-author-time-color": "#ccc",
      "comment-action-color": "rgba(0, 0, 0, 0.45)",
      "comment-action-hover-color": "#595959",
      "comment-actions-margin-bottom": "inherit",
      "comment-actions-margin-top": "12px",
      "comment-content-detail-p-margin-bottom": "inherit",
      "tabs-card-head-background": "#fafafa",
      "tabs-card-height": "40px",
      "tabs-card-active-color": "#1890ff",
      "tabs-card-horizontal-padding": "8px 16px",
      "tabs-card-horizontal-padding-sm": "6px 16px",
      "tabs-card-horizontal-padding-lg": "7px 16px 6px",
      "tabs-title-font-size": "14px",
      "tabs-title-font-size-lg": "16px",
      "tabs-title-font-size-sm": "14px",
      "tabs-ink-bar-color": "#1890ff",
      "tabs-bar-margin": "0 0 16px 0",
      "tabs-horizontal-gutter": "32px",
      "tabs-horizontal-margin": "0 0 0 32px",
      "tabs-horizontal-margin-rtl": "0 0 0 32px",
      "tabs-horizontal-padding": "12px 0",
      "tabs-horizontal-padding-lg": "16px 0",
      "tabs-horizontal-padding-sm": "8px 0",
      "tabs-vertical-padding": "8px 24px",
      "tabs-vertical-margin": "16px 0 0 0",
      "tabs-scrolling-size": "32px",
      "tabs-highlight-color": "#1890ff",
      "tabs-hover-color": "#40a9ff",
      "tabs-active-color": "#096dd9",
      "tabs-card-gutter": "2px",
      "tabs-card-tab-active-border-top": "2px solid transparent",
      "back-top-color": "#fff",
      "back-top-bg": "rgba(0, 0, 0, 0.45)",
      "back-top-hover-bg": "rgba(0, 0, 0, 0.85)",
      "avatar-size-base": "32px",
      "avatar-size-lg": "40px",
      "avatar-size-sm": "24px",
      "avatar-font-size-base": "18px",
      "avatar-font-size-lg": "24px",
      "avatar-font-size-sm": "14px",
      "avatar-bg": "#ccc",
      "avatar-color": "#fff",
      "avatar-border-radius": "2px",
      "avatar-group-overlapping": "-8px",
      "avatar-group-space": "3px",
      "avatar-group-border-color": "#fff",
      "switch-height": "22px",
      "switch-sm-height": "16px",
      "switch-min-width": "44px",
      "switch-sm-min-width": "28px",
      "switch-disabled-opacity": "0.4",
      "switch-color": "#1890ff",
      "switch-bg": "#fff",
      "switch-shadow-color": "rgba(0, 35, 11, 0.2)",
      "switch-padding": "2px",
      "switch-inner-margin-min": "7px",
      "switch-inner-margin-max": "25px",
      "switch-sm-inner-margin-min": "5px",
      "switch-sm-inner-margin-max": "18px",
      "pagination-item-bg": "#fff",
      "pagination-item-size": "32px",
      "pagination-item-size-sm": "24px",
      "pagination-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "pagination-font-weight-active": "500",
      "pagination-item-bg-active": "#fff",
      "pagination-item-link-bg": "#fff",
      "pagination-item-disabled-color-active": "rgba(0, 0, 0, 0.25)",
      "pagination-item-disabled-bg-active": "#e6e6e6",
      "pagination-item-input-bg": "#fff",
      "pagination-mini-options-size-changer-top": "0px",
      "page-header-padding": "24px",
      "page-header-padding-vertical": "16px",
      "page-header-padding-breadcrumb": "12px",
      "page-header-content-padding-vertical": "12px",
      "page-header-back-color": "#000",
      "page-header-ghost-bg": "inherit",
      "page-header-heading-title": "20px",
      "page-header-heading-sub-title": "14px",
      "page-header-tabs-tab-font-size": "16px",
      "breadcrumb-base-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-last-item-color": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-font-size": "14px",
      "breadcrumb-icon-font-size": "14px",
      "breadcrumb-link-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-link-color-hover": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-separator-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-separator-margin": "0 8px",
      "slider-margin": "10px 6px 10px",
      "slider-rail-background-color": "#f5f5f5",
      "slider-rail-background-color-hover": "#e1e1e1",
      "slider-track-background-color": "#91d5ff",
      "slider-track-background-color-hover": "#69c0ff",
      "slider-handle-border-width": "2px",
      "slider-handle-background-color": "#fff",
      "slider-handle-color": "#91d5ff",
      "slider-handle-color-hover": "#69c0ff",
      "slider-handle-color-focus": "#46a6ff",
      "slider-handle-color-focus-shadow": "rgba(24, 144, 255, 0.12)",
      "slider-handle-color-tooltip-open": "#1890ff",
      "slider-handle-size": "14px",
      "slider-handle-margin-top": "-5px",
      "slider-handle-shadow": "0",
      "slider-dot-border-color": "#f0f0f0",
      "slider-dot-border-color-active": "#8cc8ff",
      "slider-disabled-color": "rgba(0, 0, 0, 0.25)",
      "slider-disabled-background-color": "#fff",
      "tree-bg": "#fff",
      "tree-title-height": "24px",
      "tree-child-padding": "18px",
      "tree-directory-selected-color": "#fff",
      "tree-directory-selected-bg": "#1890ff",
      "tree-node-hover-bg": "#f5f5f5",
      "tree-node-selected-bg": "#bae7ff",
      "collapse-header-padding": "12px 16px",
      "collapse-header-padding-extra": "40px",
      "collapse-header-bg": "#fafafa",
      "collapse-content-padding": "16px",
      "collapse-content-bg": "#fff",
      "collapse-header-arrow-left": "16px",
      "skeleton-color": "rgba(190, 190, 190, 0.2)",
      "skeleton-to-color": "rgba(129, 129, 129, 0.24)",
      "skeleton-paragraph-margin-top": "28px",
      "skeleton-paragraph-li-margin-top": "16px",
      "skeleton-paragraph-li-height": "16px",
      "skeleton-title-height": "16px",
      "skeleton-title-paragraph-margin-top": "24px",
      "transfer-header-height": "40px",
      "transfer-item-height": "32px",
      "transfer-disabled-bg": "#f5f5f5",
      "transfer-list-height": "200px",
      "transfer-item-hover-bg": "#f5f5f5",
      "transfer-item-selected-hover-bg": "#dcf4ff",
      "transfer-item-padding-vertical": "6px",
      "transfer-list-search-icon-top": "12px",
      "message-notice-content-padding": "10px 16px",
      "message-notice-content-bg": "#fff",
      "wave-animation-width": "6px",
      "alert-success-border-color": "#b7eb8f",
      "alert-success-bg-color": "#f6ffed",
      "alert-success-icon-color": "#52c41a",
      "alert-info-border-color": "#91d5ff",
      "alert-info-bg-color": "#e6f7ff",
      "alert-info-icon-color": "#1890ff",
      "alert-warning-border-color": "#ffe58f",
      "alert-warning-bg-color": "#fffbe6",
      "alert-warning-icon-color": "#faad14",
      "alert-error-border-color": "#ffccc7",
      "alert-error-bg-color": "#fff2f0",
      "alert-error-icon-color": "#ff4d4f",
      "alert-message-color": "rgba(0, 0, 0, 0.85)",
      "alert-text-color": "rgba(0, 0, 0, 0.85)",
      "alert-close-color": "rgba(0, 0, 0, 0.45)",
      "alert-close-hover-color": "rgba(0, 0, 0, 0.75)",
      "alert-no-icon-padding-vertical": "8px",
      "alert-with-description-no-icon-padding-vertical": "15px",
      "alert-with-description-padding-vertical": "15px",
      "alert-with-description-padding": "15px 15px 15px 24px",
      "alert-icon-top": "12.0005px",
      "alert-with-description-icon-size": "24px",
      "list-header-background": "transparent",
      "list-footer-background": "transparent",
      "list-empty-text-padding": "16px",
      "list-item-padding": "12px 0",
      "list-item-padding-sm": "8px 16px",
      "list-item-padding-lg": "16px 24px",
      "list-item-meta-margin-bottom": "16px",
      "list-item-meta-avatar-margin-right": "16px",
      "list-item-meta-title-margin-bottom": "12px",
      "list-customize-card-bg": "#fff",
      "list-item-meta-description-font-size": "14px",
      "statistic-title-font-size": "14px",
      "statistic-content-font-size": "24px",
      "statistic-unit-font-size": "24px",
      "statistic-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "drawer-header-padding": "16px 24px",
      "drawer-bg": "#fff",
      "drawer-footer-padding-vertical": "10px",
      "drawer-footer-padding-horizontal": "16px",
      "drawer-header-close-size": "56px",
      "drawer-title-font-size": "16px",
      "drawer-title-line-height": "22px",
      "timeline-width": "2px",
      "timeline-color": "#f0f0f0",
      "timeline-dot-border-width": "2px",
      "timeline-dot-color": "#1890ff",
      "timeline-dot-bg": "#fff",
      "timeline-item-padding-bottom": "20px",
      "typography-title-font-weight": "600",
      "typography-title-margin-top": "1.2em",
      "typography-title-margin-bottom": "0.5em",
      "upload-actions-color": "rgba(0, 0, 0, 0.45)",
      "process-tail-color": "#f0f0f0",
      "steps-nav-arrow-color": "rgba(0, 0, 0, 0.25)",
      "steps-background": "#fff",
      "steps-icon-size": "32px",
      "steps-icon-custom-size": "32px",
      "steps-icon-custom-top": "0px",
      "steps-icon-custom-font-size": "24px",
      "steps-icon-top": "-0.5px",
      "steps-icon-font-size": "16px",
      "steps-icon-margin": "0 8px 0 0",
      "steps-title-line-height": "32px",
      "steps-small-icon-size": "24px",
      "steps-small-icon-margin": "0 8px 0 0",
      "steps-dot-size": "8px",
      "steps-dot-top": "2px",
      "steps-current-dot-size": "10px",
      "steps-description-max-width": "140px",
      "steps-nav-content-max-width": "auto",
      "steps-vertical-icon-width": "16px",
      "steps-vertical-tail-width": "16px",
      "steps-vertical-tail-width-sm": "12px",
      "notification-bg": "#fff",
      "notification-padding-vertical": "16px",
      "notification-padding-horizontal": "24px",
      "result-title-font-size": "24px",
      "result-subtitle-font-size": "14px",
      "result-icon-font-size": "72px",
      "result-extra-margin": "24px 0 0 0",
      "image-size-base": "48px",
      "image-font-size-base": "24px",
      "image-bg": "#f5f5f5",
      "image-color": "#fff",
      "image-mask-font-size": "16px",
      "image-preview-operation-size": "18px",
      "image-preview-operation-color": "rgba(255, 255, 255, 0.85)",
      "image-preview-operation-disabled-color": "rgba(255, 255, 255, 0.25)",
      "segmented-bg": "rgba(0, 0, 0, 0.04)",
      "segmented-hover-bg": "rgba(0, 0, 0, 0.06)",
      "segmented-selected-bg": "#fff",
      "segmented-label-color": "rgba(0, 0, 0, 0.65)",
      "segmented-label-hover-color": "#262626"
    }
  },
  "routes": {
    "1": {
      "path": "/user",
      "layout": false,
      "id": "1",
      "absPath": "/user"
    },
    "2": {
      "name": "login",
      "path": "/user/login",
      "file": "@/pages/user/login/index.tsx",
      "parentId": "1",
      "id": "2",
      "absPath": "/user/login",
      "__content": "import {\r\n  AlipayCircleOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  TaobaoCircleOutlined,\r\n  UserOutlined,\r\n  WeiboCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  LoginForm,\r\n  ProFormCaptcha,\r\n  ProFormCheckbox,\r\n  ProFormText,\r\n} from '@ant-design/pro-components';\r\nimport {\r\n  FormattedMessage,\r\n  Helmet,\r\n  SelectLang,\r\n  useIntl,\r\n  useModel,\r\n} from '@umijs/max';\r\nimport { Alert, App, Tabs } from 'antd';\r\nimport { createStyles } from 'antd-style';\r\nimport React, { useState } from 'react';\r\nimport { flushSync } from 'react-dom';\r\nimport { Footer } from '@/components';\r\nimport { login } from '@/services/ant-design-pro/api';\r\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\r\nimport Settings from '../../../../config/defaultSettings';\r\n\r\nconst useStyles = createStyles(({ token }) => {\r\n  return {\r\n    action: {\r\n      marginLeft: '8px',\r\n      color: 'rgba(0, 0, 0, 0.2)',\r\n      fontSize: '24px',\r\n      verticalAlign: 'middle',\r\n      cursor: 'pointer',\r\n      transition: 'color 0.3s',\r\n      '&:hover': {\r\n        color: token.colorPrimaryActive,\r\n      },\r\n    },\r\n    lang: {\r\n      width: 42,\r\n      height: 42,\r\n      lineHeight: '42px',\r\n      position: 'fixed',\r\n      right: 16,\r\n      borderRadius: token.borderRadius,\r\n      ':hover': {\r\n        backgroundColor: token.colorBgTextHover,\r\n      },\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n      backgroundImage:\r\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\r\n      backgroundSize: '100% 100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst ActionIcons = () => {\r\n  const { styles } = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AlipayCircleOutlined\r\n        key=\"AlipayCircleOutlined\"\r\n        className={styles.action}\r\n      />\r\n      <TaobaoCircleOutlined\r\n        key=\"TaobaoCircleOutlined\"\r\n        className={styles.action}\r\n      />\r\n      <WeiboCircleOutlined\r\n        key=\"WeiboCircleOutlined\"\r\n        className={styles.action}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Lang = () => {\r\n  const { styles } = useStyles();\r\n\r\n  return (\r\n    <div className={styles.lang} data-lang>\r\n      {SelectLang && <SelectLang />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginMessage: React.FC<{\r\n  content: string;\r\n}> = ({ content }) => {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        marginBottom: 24,\r\n      }}\r\n      message={content}\r\n      type=\"error\"\r\n      showIcon\r\n    />\r\n  );\r\n};\r\n\r\nconst Login: React.FC = () => {\r\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\r\n  const [type, setType] = useState<string>('account');\r\n  const { initialState, setInitialState } = useModel('@@initialState');\r\n  const { styles } = useStyles();\r\n  const { message } = App.useApp();\r\n  const intl = useIntl();\r\n\r\n  const fetchUserInfo = async () => {\r\n    const userInfo = await initialState?.fetchUserInfo?.();\r\n    if (userInfo) {\r\n      flushSync(() => {\r\n        setInitialState((s) => ({\r\n          ...s,\r\n          currentUser: userInfo,\r\n        }));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: API.LoginParams) => {\r\n    try {\r\n      // 登录\r\n      const msg = await login({ ...values, type });\r\n      if (msg.status === 'ok') {\r\n        const defaultLoginSuccessMessage = intl.formatMessage({\r\n          id: 'pages.login.success',\r\n          defaultMessage: '登录成功！',\r\n        });\r\n        message.success(defaultLoginSuccessMessage);\r\n        await fetchUserInfo();\r\n        const urlParams = new URL(window.location.href).searchParams;\r\n        window.location.href = urlParams.get('redirect') || '/';\r\n        return;\r\n      }\r\n      console.log(msg);\r\n      // 如果失败去设置用户错误信息\r\n      setUserLoginState(msg);\r\n    } catch (error) {\r\n      const defaultLoginFailureMessage = intl.formatMessage({\r\n        id: 'pages.login.failure',\r\n        defaultMessage: '登录失败，请重试！',\r\n      });\r\n      console.log(error);\r\n      message.error(defaultLoginFailureMessage);\r\n    }\r\n  };\r\n  const { status, type: loginType } = userLoginState;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Helmet>\r\n        <title>\r\n          {intl.formatMessage({\r\n            id: 'menu.login',\r\n            defaultMessage: '登录页',\r\n          })}\r\n          {Settings.title && ` - ${Settings.title}`}\r\n        </title>\r\n      </Helmet>\r\n      <Lang />\r\n      <div\r\n        style={{\r\n          flex: '1',\r\n          padding: '32px 0',\r\n        }}\r\n      >\r\n        <LoginForm\r\n          contentStyle={{\r\n            minWidth: 280,\r\n            maxWidth: '75vw',\r\n          }}\r\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\r\n          title={Settings.title}\r\n          subTitle={intl.formatMessage({\r\n            id: 'pages.layouts.userLayout.title',\r\n          })}\r\n          initialValues={{\r\n            autoLogin: true,\r\n          }}\r\n          actions={[\r\n            <FormattedMessage\r\n              key=\"loginWith\"\r\n              id=\"pages.login.loginWith\"\r\n              defaultMessage=\"其他登录方式\"\r\n            />,\r\n            <ActionIcons key=\"icons\" />,\r\n          ]}\r\n          onFinish={async (values) => {\r\n            await handleSubmit(values as API.LoginParams);\r\n          }}\r\n        >\r\n          <Tabs\r\n            activeKey={type}\r\n            onChange={setType}\r\n            centered\r\n            items={[\r\n              {\r\n                key: 'account',\r\n                label: intl.formatMessage({\r\n                  id: 'pages.login.accountLogin.tab',\r\n                  defaultMessage: '账户密码登录',\r\n                }),\r\n              },\r\n              {\r\n                key: 'mobile',\r\n                label: intl.formatMessage({\r\n                  id: 'pages.login.phoneLogin.tab',\r\n                  defaultMessage: '手机号登录',\r\n                }),\r\n              },\r\n            ]}\r\n          />\r\n\r\n          {status === 'error' && loginType === 'account' && (\r\n            <LoginMessage\r\n              content={intl.formatMessage({\r\n                id: 'pages.login.accountLogin.errorMessage',\r\n                defaultMessage: '账户或密码错误(admin/ant.design)',\r\n              })}\r\n            />\r\n          )}\r\n          {type === 'account' && (\r\n            <>\r\n              <ProFormText\r\n                name=\"username\"\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <UserOutlined />,\r\n                }}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.username.placeholder',\r\n                  defaultMessage: '用户名: admin or user',\r\n                })}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.username.required\"\r\n                        defaultMessage=\"请输入用户名!\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n              <ProFormText.Password\r\n                name=\"password\"\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <LockOutlined />,\r\n                }}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.password.placeholder',\r\n                  defaultMessage: '密码: ant.design',\r\n                })}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.password.required\"\r\n                        defaultMessage=\"请输入密码！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {status === 'error' && loginType === 'mobile' && (\r\n            <LoginMessage content=\"验证码错误\" />\r\n          )}\r\n          {type === 'mobile' && (\r\n            <>\r\n              <ProFormText\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <MobileOutlined />,\r\n                }}\r\n                name=\"mobile\"\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.phoneNumber.placeholder',\r\n                  defaultMessage: '手机号',\r\n                })}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.phoneNumber.required\"\r\n                        defaultMessage=\"请输入手机号！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                  {\r\n                    pattern: /^1\\d{10}$/,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.phoneNumber.invalid\"\r\n                        defaultMessage=\"手机号格式错误！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n              <ProFormCaptcha\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <LockOutlined />,\r\n                }}\r\n                captchaProps={{\r\n                  size: 'large',\r\n                }}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.captcha.placeholder',\r\n                  defaultMessage: '请输入验证码',\r\n                })}\r\n                captchaTextRender={(timing, count) => {\r\n                  if (timing) {\r\n                    return `${count} ${intl.formatMessage({\r\n                      id: 'pages.getCaptchaSecondText',\r\n                      defaultMessage: '获取验证码',\r\n                    })}`;\r\n                  }\r\n                  return intl.formatMessage({\r\n                    id: 'pages.login.phoneLogin.getVerificationCode',\r\n                    defaultMessage: '获取验证码',\r\n                  });\r\n                }}\r\n                name=\"captcha\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.captcha.required\"\r\n                        defaultMessage=\"请输入验证码！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n                onGetCaptcha={async (phone) => {\r\n                  const result = await getFakeCaptcha({\r\n                    phone,\r\n                  });\r\n                  if (!result) {\r\n                    return;\r\n                  }\r\n                  message.success('获取验证码成功！验证码为：1234');\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n          <div\r\n            style={{\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            <ProFormCheckbox noStyle name=\"autoLogin\">\r\n              <FormattedMessage\r\n                id=\"pages.login.rememberMe\"\r\n                defaultMessage=\"自动登录\"\r\n              />\r\n            </ProFormCheckbox>\r\n            <a\r\n              style={{\r\n                float: 'right',\r\n              }}\r\n            >\r\n              <FormattedMessage\r\n                id=\"pages.login.forgotPassword\"\r\n                defaultMessage=\"忘记密码\"\r\n              />\r\n            </a>\r\n          </div>\r\n        </LoginForm>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/user/login/index.tsx"
    },
    "3": {
      "path": "/welcome",
      "name": "welcome",
      "icon": "smile",
      "file": "@/pages/Welcome.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "3",
      "absPath": "/welcome",
      "__content": "import { PageContainer } from '@ant-design/pro-components';\r\nimport { useModel } from '@umijs/max';\r\nimport { Card, theme } from 'antd';\r\nimport React from 'react';\r\n\r\n/**\r\n * 每个单独的卡片，为了复用样式抽成了组件\r\n * @param param0\r\n * @returns\r\n */\r\nconst InfoCard: React.FC<{\r\n  title: string;\r\n  index: number;\r\n  desc: string;\r\n  href: string;\r\n}> = ({ title, href, index, desc }) => {\r\n  const { useToken } = theme;\r\n\r\n  const { token } = useToken();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: token.colorBgContainer,\r\n        boxShadow: token.boxShadow,\r\n        borderRadius: '8px',\r\n        fontSize: '14px',\r\n        color: token.colorTextSecondary,\r\n        lineHeight: '22px',\r\n        padding: '16px 19px',\r\n        minWidth: '220px',\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          gap: '4px',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: 48,\r\n            height: 48,\r\n            lineHeight: '22px',\r\n            backgroundSize: '100%',\r\n            textAlign: 'center',\r\n            padding: '8px 16px 16px 12px',\r\n            color: '#FFF',\r\n            fontWeight: 'bold',\r\n            backgroundImage:\r\n              \"url('https://gw.alipayobjects.com/zos/bmw-prod/daaf8d50-8e6d-4251-905d-676a24ddfa12.svg')\",\r\n          }}\r\n        >\r\n          {index}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: '16px',\r\n            color: token.colorText,\r\n            paddingBottom: 8,\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontSize: '14px',\r\n          color: token.colorTextSecondary,\r\n          textAlign: 'justify',\r\n          lineHeight: '22px',\r\n          marginBottom: 8,\r\n        }}\r\n      >\r\n        {desc}\r\n      </div>\r\n      <a href={href} target=\"_blank\" rel=\"noreferrer\">\r\n        了解更多 {'>'}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Welcome: React.FC = () => {\r\n  const { token } = theme.useToken();\r\n  const { initialState } = useModel('@@initialState');\r\n  return (\r\n    <PageContainer>\r\n      <Card\r\n        style={{\r\n          borderRadius: 8,\r\n        }}\r\n        styles={{\r\n          body: {\r\n            backgroundImage:\r\n              initialState?.settings?.navTheme === 'realDark'\r\n                ? 'background-image: linear-gradient(75deg, #1A1B1F 0%, #191C1F 100%)'\r\n                : 'background-image: linear-gradient(75deg, #FBFDFF 0%, #F5F7FF 100%)',\r\n          },\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundPosition: '100% -30%',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: '274px auto',\r\n            backgroundImage:\r\n              \"url('https://gw.alipayobjects.com/mdn/rms_a9745b/afts/img/A*BuFmQqsB2iAAAAAAAAAAAAAAARQnAQ')\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontSize: '20px',\r\n              color: token.colorTextHeading,\r\n            }}\r\n          >\r\n            欢迎使用 AI 文档助手\r\n          </div>\r\n          <p\r\n            style={{\r\n              fontSize: '14px',\r\n              color: token.colorTextSecondary,\r\n              lineHeight: '22px',\r\n              marginTop: 16,\r\n              marginBottom: 32,\r\n              width: '65%',\r\n            }}\r\n          >\r\n            AI 文档助手是一个专为企业和个人打造的智能文档管理与处理工具。它整合了人工智能技术与高效的文档管理方案，\r\n            支持文档快速检索、智能摘要、内容生成和协作编辑，让用户能够更便捷地创建、管理和共享文档，提高工作效率。\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              gap: 16,\r\n            }}\r\n          >\r\n            <InfoCard\r\n              index={1}\r\n              href=\"https://example.com/docs/write\"\r\n              title=\"AI 文档书写\"\r\n              desc=\"智能文档编辑与书写功能，支持快速创建、格式优化和内容补全，让写作更高效。\"\r\n            />\r\n            <InfoCard\r\n              index={2}\r\n              title=\"AI 翻译\"\r\n              href=\"https://example.com/docs/translate\"\r\n              desc=\"内置 AI 翻译功能，支持多语言文档互译，帮助跨语言团队高效沟通。\"\r\n            />\r\n            <InfoCard\r\n              index={3}\r\n              title=\"AI 会议助手\"\r\n              href=\"https://example.com/docs/meeting\"\r\n              desc=\"智能会议助手，支持会议记录、自动生成会议纪要和任务分配，让会议更高效。\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/Welcome.tsx"
    },
    "4": {
      "path": "/user-info",
      "name": "用户信息",
      "icon": "bug",
      "file": "@/pages/UserInfo/index.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "4",
      "absPath": "/user-info",
      "__content": "import { Card, Descriptions, Tag } from 'antd';\r\nimport { useModel } from '@umijs/max';\r\nimport React from 'react';\r\n\r\nconst UserInfo: React.FC = () => {\r\n    const { initialState } = useModel('@@initialState');\r\n    const { currentUser } = initialState || {};\r\n\r\n    return (\r\n        <div style={{ padding: 24 }}>\r\n            <Card title=\"🔍 当前用户信息检查\" bordered>\r\n                <Descriptions column={1} bordered>\r\n                    <Descriptions.Item label=\"用户名\">\r\n                        {currentUser?.name || '未获取到'}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"用户ID\">\r\n                        {currentUser?.userid || '未获取到'}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"邮箱\">\r\n                        {currentUser?.email || '未获取到'}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"权限级别 (access)\">\r\n                        <Tag color={currentUser?.access === 'admin' ? 'green' : 'orange'}>\r\n                            {currentUser?.access || '未获取到'}\r\n                        </Tag>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"职位\">\r\n                        {currentUser?.title || '未获取到'}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"部门\">\r\n                        {currentUser?.group || '未获取到'}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/UserInfo/index.tsx"
    },
    "5": {
      "path": "/admin",
      "name": "admin",
      "icon": "crown",
      "access": "canAdmin",
      "parentId": "ant-design-pro-layout",
      "id": "5",
      "absPath": "/admin"
    },
    "6": {
      "path": "/admin",
      "redirect": "/admin/sub-page",
      "parentId": "5",
      "id": "6",
      "absPath": "/admin"
    },
    "7": {
      "path": "/admin/sub-page",
      "name": "sub-page",
      "file": "@/pages/Admin.tsx",
      "parentId": "5",
      "id": "7",
      "absPath": "/admin/sub-page",
      "__content": "import { HeartTwoTone, SmileTwoTone } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useIntl } from '@umijs/max';\nimport { Alert, Card, Typography } from 'antd';\nimport React from 'react';\n\nconst Admin: React.FC = () => {\n  const intl = useIntl();\n  return (\n    <PageContainer\n      content={intl.formatMessage({\n        id: 'pages.admin.subPage.title',\n        defaultMessage: 'This page can only be viewed by admin',\n      })}\n    >\n      <Card>\n        <Alert\n          message={intl.formatMessage({\n            id: 'pages.welcome.alertMessage',\n            defaultMessage:\n              'Faster and stronger heavy-duty components have been released.',\n          })}\n          type=\"success\"\n          showIcon\n          banner\n          style={{\n            margin: -12,\n            marginBottom: 48,\n          }}\n        />\n        <Typography.Title level={2} style={{ textAlign: 'center' }}>\n          <SmileTwoTone /> Ant Design Pro{' '}\n          <HeartTwoTone twoToneColor=\"#eb2f96\" /> You\n        </Typography.Title>\n      </Card>\n      <p style={{ textAlign: 'center', marginTop: 24 }}>\n        Want to add more pages? Please refer to{' '}\n        <a\n          href=\"https://pro.ant.design/docs/block-cn\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          use block\n        </a>\n        。\n      </p>\n    </PageContainer>\n  );\n};\n\nexport default Admin;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/Admin.tsx"
    },
    "8": {
      "name": "list.table-list",
      "icon": "table",
      "path": "/list",
      "file": "@/pages/table-list/index.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "8",
      "absPath": "/list",
      "__content": "import type {\n  ActionType,\n  ProColumns,\n  ProDescriptionsItemProps,\n} from '@ant-design/pro-components';\nimport {\n  FooterToolbar,\n  PageContainer,\n  ProDescriptions,\n  ProTable,\n} from '@ant-design/pro-components';\nimport { FormattedMessage, useIntl, useRequest } from '@umijs/max';\nimport { Button, Drawer, Input, message } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { removeRule, rule } from '@/services/ant-design-pro/api';\nimport CreateForm from './components/CreateForm';\nimport UpdateForm from './components/UpdateForm';\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType | null>(null);\n\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const [currentRow, setCurrentRow] = useState<API.RuleListItem>();\n  const [selectedRowsState, setSelectedRows] = useState<API.RuleListItem[]>([]);\n\n  /**\n   * @en-US International configuration\n   * @zh-CN 国际化配置\n   * */\n  const intl = useIntl();\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const { run: delRun, loading } = useRequest(removeRule, {\n    manual: true,\n    onSuccess: () => {\n      setSelectedRows([]);\n      actionRef.current?.reloadAndRest?.();\n\n      messageApi.success('Deleted successfully and will refresh soon');\n    },\n    onError: () => {\n      messageApi.error('Delete failed, please try again');\n    },\n  });\n\n  const columns: ProColumns<API.RuleListItem>[] = [\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.updateForm.ruleName.nameLabel\"\n          defaultMessage=\"Rule name\"\n        />\n      ),\n      dataIndex: 'name',\n      render: (dom, entity) => {\n        return (\n          <a\n            onClick={() => {\n              setCurrentRow(entity);\n              setShowDetail(true);\n            }}\n          >\n            {dom}\n          </a>\n        );\n      },\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleDesc\"\n          defaultMessage=\"Description\"\n        />\n      ),\n      dataIndex: 'desc',\n      valueType: 'textarea',\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleCallNo\"\n          defaultMessage=\"Number of service calls\"\n        />\n      ),\n      dataIndex: 'callNo',\n      sorter: true,\n      hideInForm: true,\n      renderText: (val: string) =>\n        `${val}${intl.formatMessage({\n          id: 'pages.searchTable.tenThousand',\n          defaultMessage: ' 万 ',\n        })}`,\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleStatus\"\n          defaultMessage=\"Status\"\n        />\n      ),\n      dataIndex: 'status',\n      hideInForm: true,\n      valueEnum: {\n        0: {\n          text: (\n            <FormattedMessage\n              id=\"pages.searchTable.nameStatus.default\"\n              defaultMessage=\"Shut down\"\n            />\n          ),\n          status: 'Default',\n        },\n        1: {\n          text: (\n            <FormattedMessage\n              id=\"pages.searchTable.nameStatus.running\"\n              defaultMessage=\"Running\"\n            />\n          ),\n          status: 'Processing',\n        },\n        2: {\n          text: (\n            <FormattedMessage\n              id=\"pages.searchTable.nameStatus.online\"\n              defaultMessage=\"Online\"\n            />\n          ),\n          status: 'Success',\n        },\n        3: {\n          text: (\n            <FormattedMessage\n              id=\"pages.searchTable.nameStatus.abnormal\"\n              defaultMessage=\"Abnormal\"\n            />\n          ),\n          status: 'Error',\n        },\n      },\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleUpdatedAt\"\n          defaultMessage=\"Last scheduled time\"\n        />\n      ),\n      sorter: true,\n      dataIndex: 'updatedAt',\n      valueType: 'dateTime',\n      renderFormItem: (item, { defaultRender, ...rest }, form) => {\n        const status = form.getFieldValue('status');\n        if (`${status}` === '0') {\n          return false;\n        }\n        if (`${status}` === '3') {\n          return (\n            <Input\n              {...rest}\n              placeholder={intl.formatMessage({\n                id: 'pages.searchTable.exception',\n                defaultMessage: 'Please enter the reason for the exception!',\n              })}\n            />\n          );\n        }\n        return defaultRender(item);\n      },\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleOption\"\n          defaultMessage=\"Operating\"\n        />\n      ),\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <UpdateForm\n          trigger={\n            <a>\n              <FormattedMessage\n                id=\"pages.searchTable.config\"\n                defaultMessage=\"Configuration\"\n              />\n            </a>\n          }\n          key=\"config\"\n          onOk={actionRef.current?.reload}\n          values={record}\n        />,\n        <a key=\"subscribeAlert\" href=\"https://procomponents.ant.design/\">\n          <FormattedMessage\n            id=\"pages.searchTable.subscribeAlert\"\n            defaultMessage=\"Subscribe to alerts\"\n          />\n        </a>,\n      ],\n    },\n  ];\n\n  /**\n   *  Delete node\n   * @zh-CN 删除节点\n   *\n   * @param selectedRows\n   */\n  const handleRemove = useCallback(\n    async (selectedRows: API.RuleListItem[]) => {\n      if (!selectedRows?.length) {\n        messageApi.warning('请选择删除项');\n\n        return;\n      }\n\n      await delRun({\n        data: {\n          key: selectedRows.map((row) => row.key),\n        },\n      });\n    },\n    [delRun, messageApi.warning],\n  );\n\n  return (\n    <PageContainer>\n      {contextHolder}\n      <ProTable<API.RuleListItem, API.PageParams>\n        headerTitle={intl.formatMessage({\n          id: 'pages.searchTable.title',\n          defaultMessage: 'Enquiry form',\n        })}\n        actionRef={actionRef}\n        rowKey=\"key\"\n        search={{\n          labelWidth: 120,\n        }}\n        toolBarRender={() => [\n          <CreateForm key=\"create\" reload={actionRef.current?.reload} />,\n        ]}\n        request={rule}\n        columns={columns}\n        rowSelection={{\n          onChange: (_, selectedRows) => {\n            setSelectedRows(selectedRows);\n          },\n        }}\n      />\n      {selectedRowsState?.length > 0 && (\n        <FooterToolbar\n          extra={\n            <div>\n              <FormattedMessage\n                id=\"pages.searchTable.chosen\"\n                defaultMessage=\"Chosen\"\n              />{' '}\n              <a style={{ fontWeight: 600 }}>{selectedRowsState.length}</a>{' '}\n              <FormattedMessage\n                id=\"pages.searchTable.item\"\n                defaultMessage=\"项\"\n              />\n              &nbsp;&nbsp;\n              <span>\n                <FormattedMessage\n                  id=\"pages.searchTable.totalServiceCalls\"\n                  defaultMessage=\"Total number of service calls\"\n                />{' '}\n                {selectedRowsState.reduce(\n                  (pre, item) => pre + (item.callNo ?? 0),\n                  0,\n                )}{' '}\n                <FormattedMessage\n                  id=\"pages.searchTable.tenThousand\"\n                  defaultMessage=\"万\"\n                />\n              </span>\n            </div>\n          }\n        >\n          <Button\n            loading={loading}\n            onClick={() => {\n              handleRemove(selectedRowsState);\n            }}\n          >\n            <FormattedMessage\n              id=\"pages.searchTable.batchDeletion\"\n              defaultMessage=\"Batch deletion\"\n            />\n          </Button>\n          <Button type=\"primary\">\n            <FormattedMessage\n              id=\"pages.searchTable.batchApproval\"\n              defaultMessage=\"Batch approval\"\n            />\n          </Button>\n        </FooterToolbar>\n      )}\n\n      <Drawer\n        width={600}\n        open={showDetail}\n        onClose={() => {\n          setCurrentRow(undefined);\n          setShowDetail(false);\n        }}\n        closable={false}\n      >\n        {currentRow?.name && (\n          <ProDescriptions<API.RuleListItem>\n            column={2}\n            title={currentRow?.name}\n            request={async () => ({\n              data: currentRow || {},\n            })}\n            params={{\n              id: currentRow?.name,\n            }}\n            columns={columns as ProDescriptionsItemProps<API.RuleListItem>[]}\n          />\n        )}\n      </Drawer>\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/table-list/index.tsx"
    },
    "9": {
      "path": "/AI/calendar",
      "icon": "calendar",
      "name": "日程管理",
      "file": "@/pages/AI/Calendar/index.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "9",
      "absPath": "/AI/calendar",
      "__content": "import { Edit2, Plus, Trash2 } from 'lucide-react';\nimport React, { useState } from 'react';\n\ninterface CalendarEvent {\n  id: string;\n  title: string;\n  start: Date;\n  end: Date;\n  description?: string;\n  type: 'meeting' | 'task' | 'reminder' | 'other';\n  color: string;\n}\n\nconst eventTypes = [\n  { label: '会议', value: 'meeting', color: '#3b82f6' },\n  { label: '任务', value: 'task', color: '#10b981' },\n  { label: '提醒', value: 'reminder', color: '#f59e0b' },\n  { label: '其他', value: 'other', color: '#6b7280' },\n];\n\nconst CalendarManagement: React.FC = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [events, setEvents] = useState<CalendarEvent[]>([\n    {\n      id: '1',\n      title: '团队周会',\n      start: new Date(2025, 9, 13, 10),\n      end: new Date(2025, 9, 13, 11),\n      type: 'meeting',\n      color: '#3b82f6',\n      description: '讨论本周工作进展',\n    },\n    {\n      id: '2',\n      title: '项目截止日',\n      start: new Date(2025, 9, 15, 9),\n      end: new Date(2025, 9, 15, 18),\n      type: 'task',\n      color: '#10b981',\n      description: '完成项目第一阶段开发',\n    },\n  ]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [editingEvent, setEditingEvent] = useState<CalendarEvent | null>(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    startDate: '',\n    startTime: '',\n    endDate: '',\n    endTime: '',\n    description: '',\n    type: 'other' as CalendarEvent['type'],\n  });\n\n  const [viewMode, setViewMode] = useState<'month' | 'day'>('month');\n  const [showMeetings, setShowMeetings] = useState(true);\n  const [showTasks, setShowTasks] = useState(true);\n  const [showWeekends, setShowWeekends] = useState(true);\n\n  const formatTime = (date: Date) =>\n    date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' });\n  const handlePrevMonth = () =>\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1),\n    );\n  const handleNextMonth = () =>\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1),\n    );\n  const handleToday = () => {\n    const today = new Date();\n    setCurrentDate(today);\n    setSelectedDate(today);\n  };\n\n  const getDaysInMonth = (date: Date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const days: (Date | null)[] = [];\n\n    for (let i = 0; i < firstDay.getDay(); i++) days.push(null);\n    for (let i = 1; i <= lastDay.getDate(); i++)\n      days.push(new Date(year, month, i));\n    while (days.length % 7 !== 0) days.push(null);\n\n    return days;\n  };\n\n  const getEventsForDate = (date: Date | null) => {\n    if (!date) return [];\n    let filteredEvents = events.filter(\n      (event) => event.start.toDateString() === date.toDateString(),\n    );\n\n    if (!showMeetings) {\n      filteredEvents = filteredEvents.filter((e) => e.type !== 'meeting');\n    }\n    if (!showTasks) {\n      filteredEvents = filteredEvents.filter((e) => e.type !== 'task');\n    }\n\n    return filteredEvents;\n  };\n\n  const openCreateModal = () => {\n    setEditingEvent(null);\n    const now = selectedDate;\n    setFormData({\n      title: '',\n      startDate: now.toISOString().split('T')[0],\n      startTime: '09:00',\n      endDate: now.toISOString().split('T')[0],\n      endTime: '10:00',\n      description: '',\n      type: 'other',\n    });\n    setShowModal(true);\n  };\n\n  const openEditModal = (event: CalendarEvent) => {\n    setEditingEvent(event);\n    setFormData({\n      title: event.title,\n      startDate: event.start.toISOString().split('T')[0],\n      startTime: formatTime(event.start),\n      endDate: event.end.toISOString().split('T')[0],\n      endTime: formatTime(event.end),\n      description: event.description || '',\n      type: event.type,\n    });\n    setShowModal(true);\n  };\n\n  const handleSave = () => {\n    if (!formData.title.trim()) return alert('请输入事件标题');\n    const start = new Date(`${formData.startDate}T${formData.startTime}`);\n    const end = new Date(`${formData.endDate}T${formData.endTime}`);\n    if (end <= start) return alert('结束时间必须晚于开始时间');\n\n    const color =\n      eventTypes.find((t) => t.value === formData.type)?.color || '#6b7280';\n\n    if (editingEvent) {\n      setEvents(\n        events.map((e) =>\n          e.id === editingEvent.id\n            ? {\n                ...e,\n                title: formData.title,\n                start,\n                end,\n                description: formData.description,\n                type: formData.type,\n                color,\n              }\n            : e,\n        ),\n      );\n    } else {\n      setEvents([\n        ...events,\n        {\n          id: Date.now().toString(),\n          title: formData.title,\n          start,\n          end,\n          description: formData.description,\n          type: formData.type,\n          color,\n        },\n      ]);\n    }\n    setShowModal(false);\n  };\n\n  const handleDelete = (id: string) => {\n    if (confirm('确定删除吗？')) setEvents(events.filter((e) => e.id !== id));\n  };\n\n  const renderCalendarGrid = (\n    days: (Date | null)[],\n    isSmall: boolean = false,\n  ) => {\n    let filteredDays = days;\n    let weekdays = ['日', '一', '二', '三', '四', '五', '六'];\n\n    if (!showWeekends) {\n      filteredDays = [];\n      weekdays = ['一', '二', '三', '四', '五'];\n      for (let i = 0; i < days.length; i++) {\n        const weekdayIdx = i % 7;\n        if (weekdayIdx !== 0 && weekdayIdx !== 6) {\n          filteredDays.push(days[i]);\n        }\n      }\n    }\n\n    return (\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${weekdays.length}, 1fr)`,\n          gap: '4px',\n        }}\n      >\n        {weekdays.map((d) => (\n          <div\n            key={d}\n            style={{\n              textAlign: 'center',\n              fontWeight: '600',\n              fontSize: isSmall ? '11px' : '14px',\n              padding: isSmall ? '4px 0' : '8px 0',\n              color: '#4b5563',\n            }}\n          >\n            {d}\n          </div>\n        ))}\n        {filteredDays.map((day, idx) => {\n          const dayEvents = day ? getEventsForDate(day) : [];\n          const isToday =\n            day && day.toDateString() === new Date().toDateString();\n          const isSelected =\n            day && day.toDateString() === selectedDate.toDateString();\n\n          return (\n            <div\n              key={day ? day.toISOString() : `empty-${idx}`}\n              onClick={() => day && setSelectedDate(day)}\n              style={{\n                minHeight: isSmall ? '28px' : '112px',\n                border: '1px solid',\n                borderColor: !day\n                  ? '#e5e7eb'\n                  : isSelected\n                    ? '#60a5fa'\n                    : isToday\n                      ? '#fbbf24'\n                      : '#e5e7eb',\n                borderRadius: isSmall ? '4px' : '6px',\n                padding: isSmall ? '2px' : '8px',\n                cursor: 'pointer',\n                display: 'flex',\n                flexDirection: 'column',\n                backgroundColor: !day\n                  ? '#f9fafb'\n                  : isSelected\n                    ? '#eff6ff'\n                    : isToday\n                      ? '#fef3c7'\n                      : '#ffffff',\n              }}\n              onMouseEnter={(e) => {\n                if (day && !isSelected && !isToday) {\n                  e.currentTarget.style.backgroundColor = '#f9fafb';\n                }\n              }}\n              onMouseLeave={(e) => {\n                if (day && !isSelected && !isToday) {\n                  e.currentTarget.style.backgroundColor = '#ffffff';\n                }\n              }}\n            >\n              {day && (\n                <>\n                  <div\n                    style={{\n                      fontSize: isSmall ? '11px' : '14px',\n                      fontWeight: '600',\n                      marginBottom: '4px',\n                      color: isToday\n                        ? '#b45309'\n                        : isSelected\n                          ? '#1d4ed8'\n                          : '#374151',\n                    }}\n                  >\n                    {day.getDate()}\n                  </div>\n                  {!isSmall && (\n                    <div\n                      style={{\n                        flex: 1,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: '4px',\n                        overflow: 'hidden',\n                      }}\n                    >\n                      {dayEvents.map((ev) => (\n                        <div\n                          key={ev.id}\n                          style={{\n                            backgroundColor: ev.color,\n                            color: 'white',\n                            padding: '4px 8px',\n                            borderRadius: '4px',\n                            fontSize: '12px',\n                            cursor: 'pointer',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            whiteSpace: 'nowrap',\n                            transition: 'box-shadow 0.2s',\n                          }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            openEditModal(ev);\n                          }}\n                          onMouseEnter={(e) => {\n                            e.currentTarget.style.boxShadow =\n                              '0 4px 6px -1px rgba(0, 0, 0, 0.1)';\n                          }}\n                          onMouseLeave={(e) => {\n                            e.currentTarget.style.boxShadow = 'none';\n                          }}\n                        >\n                          <span\n                            style={{\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis',\n                              flex: 1,\n                            }}\n                          >\n                            {ev.title}\n                          </span>\n                          <span\n                            style={{\n                              fontSize: '10px',\n                              opacity: 0.9,\n                              marginLeft: '4px',\n                              whiteSpace: 'nowrap',\n                            }}\n                          >\n                            {formatTime(ev.start)}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const days = getDaysInMonth(currentDate);\n  const monthName = currentDate.toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  return (\n    <div\n      style={{\n        minHeight: '100vh',\n        backgroundColor: '#f9fafb',\n        padding: '24px',\n      }}\n    >\n      <div style={{ maxWidth: '1280px', margin: '0 auto' }}>\n        <div style={{ display: 'flex', gap: '24px', flexDirection: 'row' }}>\n          {/* 左侧小日历 */}\n          <div\n            style={{\n              width: '280px',\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '12px',\n              flexShrink: 0,\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: 'white',\n                borderRadius: '12px',\n                boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',\n                padding: '12px',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  marginBottom: '8px',\n                }}\n              >\n                <button\n                  type=\"button\"\n                  onClick={handlePrevMonth}\n                  style={{\n                    width: '24px',\n                    height: '24px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: '#6b7280',\n                    cursor: 'pointer',\n                    border: 'none',\n                    background: 'none',\n                  }}\n                >\n                  <span style={{ fontSize: '18px', fontWeight: '300' }}>‹</span>\n                </button>\n                <h2\n                  style={{\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    color: '#1f2937',\n                    margin: '0 8px',\n                    whiteSpace: 'nowrap',\n                  }}\n                >\n                  {monthName}\n                </h2>\n                <button\n                  type=\"button\"\n                  onClick={handleNextMonth}\n                  style={{\n                    width: '24px',\n                    height: '24px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: '#6b7280',\n                    cursor: 'pointer',\n                    border: 'none',\n                    background: 'none',\n                  }}\n                >\n                  <span style={{ fontSize: '18px', fontWeight: '300' }}>›</span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleToday}\n                  style={{\n                    marginLeft: '8px',\n                    padding: '2px 8px',\n                    fontSize: '12px',\n                    backgroundColor: '#dbeafe',\n                    color: '#1e40af',\n                    borderRadius: '4px',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontWeight: '500',\n                  }}\n                >\n                  今\n                </button>\n              </div>\n              {renderCalendarGrid(days, true)}\n            </div>\n\n            {/* 筛选按钮 */}\n            <div\n              style={{\n                backgroundColor: 'white',\n                borderRadius: '12px',\n                boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',\n                padding: '12px',\n              }}\n            >\n              <h3\n                style={{\n                  fontSize: '12px',\n                  fontWeight: '600',\n                  color: '#4b5563',\n                  marginBottom: '8px',\n                }}\n              >\n                我的日历\n              </h3>\n              <div\n                style={{ display: 'flex', flexDirection: 'column', gap: '6px' }}\n              >\n                <label\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={showMeetings}\n                    onChange={(e) => setShowMeetings(e.target.checked)}\n                    style={{ width: '16px', height: '16px' }}\n                  />\n                  <span style={{ fontSize: '14px', color: '#374151' }}>\n                    会议信息\n                  </span>\n                </label>\n                <label\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={showTasks}\n                    onChange={(e) => setShowTasks(e.target.checked)}\n                    style={{ width: '16px', height: '16px' }}\n                  />\n                  <span style={{ fontSize: '14px', color: '#374151' }}>\n                    待办任务\n                  </span>\n                </label>\n                <label\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={showWeekends}\n                    onChange={(e) => setShowWeekends(e.target.checked)}\n                    style={{ width: '16px', height: '16px' }}\n                  />\n                  <span style={{ fontSize: '14px', color: '#374151' }}>\n                    显示周末\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* 当日事件列表 */}\n            <div\n              style={{\n                backgroundColor: 'white',\n                borderRadius: '12px',\n                boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',\n                padding: '12px',\n                maxHeight: '300px',\n                overflowY: 'auto',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '8px',\n                }}\n              >\n                <h2\n                  style={{\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    color: '#1f2937',\n                  }}\n                >\n                  {selectedDate.toLocaleDateString('zh-CN', {\n                    month: 'long',\n                    day: 'numeric',\n                  })}\n                </h2>\n                <button\n                  type=\"button\"\n                  onClick={openCreateModal}\n                  style={{\n                    padding: '4px 8px',\n                    backgroundColor: '#2563eb',\n                    color: 'white',\n                    borderRadius: '8px',\n                    fontSize: '12px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '4px',\n                    border: 'none',\n                    cursor: 'pointer',\n                  }}\n                >\n                  <Plus size={12} /> 新建\n                </button>\n              </div>\n              {getEventsForDate(selectedDate).length === 0 ? (\n                <p\n                  style={{\n                    color: '#9ca3af',\n                    fontSize: '12px',\n                    textAlign: 'center',\n                    padding: '16px 0',\n                  }}\n                >\n                  暂无事件\n                </p>\n              ) : (\n                <ul\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '8px',\n                    listStyle: 'none',\n                    padding: 0,\n                    margin: 0,\n                  }}\n                >\n                  {getEventsForDate(selectedDate).map((ev) => (\n                    <li\n                      key={ev.id}\n                      style={{\n                        borderLeft: `4px solid ${ev.color}`,\n                        borderRadius: '8px',\n                        padding: '8px',\n                        backgroundColor: '#f9fafb',\n                        cursor: 'pointer',\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'start',\n                          marginBottom: '4px',\n                        }}\n                      >\n                        <span\n                          style={{\n                            fontWeight: '600',\n                            fontSize: '12px',\n                            color: '#1f2937',\n                            flex: 1,\n                          }}\n                        >\n                          {ev.title}\n                        </span>\n                        <div style={{ display: 'flex', gap: '4px' }}>\n                          <button\n                            type=\"button\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              openEditModal(ev);\n                            }}\n                            style={{\n                              padding: '4px',\n                              border: 'none',\n                              background: 'none',\n                              cursor: 'pointer',\n                              display: 'flex',\n                              alignItems: 'center',\n                            }}\n                          >\n                            <Edit2 size={14} color=\"#4b5563\" />\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDelete(ev.id);\n                            }}\n                            style={{\n                              padding: '4px',\n                              border: 'none',\n                              background: 'none',\n                              cursor: 'pointer',\n                              display: 'flex',\n                              alignItems: 'center',\n                            }}\n                          >\n                            <Trash2 size={14} color=\"#ef4444\" />\n                          </button>\n                        </div>\n                      </div>\n                      <div\n                        style={{\n                          fontSize: '12px',\n                          color: '#6b7280',\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: '4px',\n                        }}\n                      >\n                        <span>{formatTime(ev.start)}</span>\n                        <span>-</span>\n                        <span>{formatTime(ev.end)}</span>\n                      </div>\n                      {ev.description && (\n                        <div\n                          style={{\n                            fontSize: '12px',\n                            color: '#9ca3af',\n                            marginTop: '4px',\n                          }}\n                        >\n                          {ev.description}\n                        </div>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n\n          {/* 右侧大日历 */}\n          <div\n            style={{\n              flex: 1,\n              minWidth: 0,\n              backgroundColor: 'white',\n              borderRadius: '12px',\n              boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',\n              padding: '24px',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginBottom: '16px',\n                position: 'relative',\n              }}\n            >\n              <div\n                style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\n              >\n                <button\n                  type=\"button\"\n                  onClick={handlePrevMonth}\n                  style={{\n                    width: '32px',\n                    height: '32px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: '#9ca3af',\n                    cursor: 'pointer',\n                    border: 'none',\n                    background: 'none',\n                    transition: 'color 0.2s',\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.color = '#4b5563';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.color = '#9ca3af';\n                  }}\n                >\n                  <span style={{ fontSize: '24px', fontWeight: '300' }}>‹</span>\n                </button>\n                <h2\n                  style={{\n                    fontSize: '24px',\n                    fontWeight: '700',\n                    color: '#1f2937',\n                    margin: 0,\n                    whiteSpace: 'nowrap',\n                  }}\n                >\n                  {monthName}\n                </h2>\n                <button\n                  type=\"button\"\n                  onClick={handleNextMonth}\n                  style={{\n                    width: '32px',\n                    height: '32px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: '#9ca3af',\n                    cursor: 'pointer',\n                    border: 'none',\n                    background: 'none',\n                    transition: 'color 0.2s',\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.color = '#4b5563';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.color = '#9ca3af';\n                  }}\n                >\n                  <span style={{ fontSize: '24px', fontWeight: '300' }}>›</span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleToday}\n                  style={{\n                    padding: '6px 16px',\n                    backgroundColor: '#2563eb',\n                    color: 'white',\n                    borderRadius: '8px',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontWeight: '500',\n                    fontSize: '14px',\n                    whiteSpace: 'nowrap',\n                    transition: 'background-color 0.2s',\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.backgroundColor = '#1d4ed8';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.backgroundColor = '#2563eb';\n                  }}\n                >\n                  今天\n                </button>\n              </div>\n\n              <div\n                style={{\n                  position: 'absolute',\n                  right: 0,\n                  display: 'flex',\n                  backgroundColor: '#f3f4f6',\n                  borderRadius: '8px',\n                  padding: '4px',\n                }}\n              >\n                <button\n                  type=\"button\"\n                  onClick={() => setViewMode('month')}\n                  style={{\n                    padding: '6px 12px',\n                    borderRadius: '6px',\n                    fontSize: '14px',\n                    fontWeight: '500',\n                    border: 'none',\n                    cursor: 'pointer',\n                    whiteSpace: 'nowrap',\n                    backgroundColor:\n                      viewMode === 'month' ? '#ffffff' : 'transparent',\n                    color: viewMode === 'month' ? '#111827' : '#6b7280',\n                    boxShadow:\n                      viewMode === 'month'\n                        ? '0 1px 2px 0 rgba(0, 0, 0, 0.05)'\n                        : 'none',\n                    transition: 'all 0.2s',\n                  }}\n                >\n                  月\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setViewMode('day')}\n                  style={{\n                    padding: '6px 12px',\n                    borderRadius: '6px',\n                    fontSize: '14px',\n                    fontWeight: '500',\n                    border: 'none',\n                    cursor: 'pointer',\n                    whiteSpace: 'nowrap',\n                    backgroundColor:\n                      viewMode === 'day' ? '#ffffff' : 'transparent',\n                    color: viewMode === 'day' ? '#111827' : '#6b7280',\n                    boxShadow:\n                      viewMode === 'day'\n                        ? '0 1px 2px 0 rgba(0, 0, 0, 0.05)'\n                        : 'none',\n                    transition: 'all 0.2s',\n                  }}\n                >\n                  天\n                </button>\n              </div>\n            </div>\n            {viewMode === 'month' ? (\n              renderCalendarGrid(days, false)\n            ) : (\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '12px',\n                }}\n              >\n                <h3\n                  style={{\n                    fontSize: '18px',\n                    fontWeight: '600',\n                    color: '#1f2937',\n                  }}\n                >\n                  {selectedDate.toLocaleDateString('zh-CN', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric',\n                    weekday: 'long',\n                  })}\n                </h3>\n                {getEventsForDate(selectedDate).length === 0 ? (\n                  <p\n                    style={{\n                      color: '#9ca3af',\n                      textAlign: 'center',\n                      padding: '48px 0',\n                    }}\n                  >\n                    暂无事件\n                  </p>\n                ) : (\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: '8px',\n                    }}\n                  >\n                    {getEventsForDate(selectedDate).map((ev) => (\n                      <div\n                        key={ev.id}\n                        style={{\n                          borderLeft: `4px solid ${ev.color}`,\n                          borderRadius: '8px',\n                          padding: '16px',\n                          backgroundColor: '#f9fafb',\n                          cursor: 'pointer',\n                        }}\n                        onClick={() => openEditModal(ev)}\n                      >\n                        <div\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'start',\n                            marginBottom: '8px',\n                          }}\n                        >\n                          <h4\n                            style={{\n                              fontWeight: '600',\n                              fontSize: '16px',\n                              color: '#1f2937',\n                              margin: 0,\n                            }}\n                          >\n                            {ev.title}\n                          </h4>\n                          <div style={{ display: 'flex', gap: '8px' }}>\n                            <button\n                              type=\"button\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                openEditModal(ev);\n                              }}\n                              style={{\n                                padding: '6px',\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                                display: 'flex',\n                                alignItems: 'center',\n                              }}\n                            >\n                              <Edit2 size={16} color=\"#4b5563\" />\n                            </button>\n                            <button\n                              type=\"button\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleDelete(ev.id);\n                              }}\n                              style={{\n                                padding: '6px',\n                                border: 'none',\n                                background: 'none',\n                                cursor: 'pointer',\n                                display: 'flex',\n                                alignItems: 'center',\n                              }}\n                            >\n                              <Trash2 size={16} color=\"#ef4444\" />\n                            </button>\n                          </div>\n                        </div>\n                        <div\n                          style={{\n                            fontSize: '14px',\n                            color: '#6b7280',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '8px',\n                            marginBottom: '8px',\n                          }}\n                        >\n                          <span>{formatTime(ev.start)}</span>\n                          <span>-</span>\n                          <span>{formatTime(ev.end)}</span>\n                          <span\n                            style={{\n                              padding: '2px 8px',\n                              borderRadius: '4px',\n                              fontSize: '12px',\n                              backgroundColor: `${ev.color}20`,\n                              color: ev.color,\n                            }}\n                          >\n                            {eventTypes.find((t) => t.value === ev.type)?.label}\n                          </span>\n                        </div>\n                        {ev.description && (\n                          <p\n                            style={{\n                              fontSize: '14px',\n                              color: '#6b7280',\n                              margin: 0,\n                            }}\n                          >\n                            {ev.description}\n                          </p>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Modal - 使用 portal 样式的居中布局 */}\n      {showModal && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 9999,\n            padding: '16px',\n          }}\n          onClick={() => setShowModal(false)}\n        >\n          <div\n            style={{\n              backgroundColor: 'white',\n              borderRadius: '12px',\n              boxShadow:\n                '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n              maxWidth: '512px',\n              width: '100%',\n              maxHeight: '90vh',\n              display: 'flex',\n              flexDirection: 'column',\n              overflow: 'hidden',\n            }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div style={{ padding: '24px', overflowY: 'auto', flex: 1 }}>\n              <h2\n                style={{\n                  fontSize: '24px',\n                  fontWeight: '700',\n                  color: '#1f2937',\n                  marginBottom: '24px',\n                  margin: 0,\n                }}\n              >\n                {editingEvent ? '编辑事件' : '新建事件'}\n              </h2>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '16px',\n                }}\n              >\n                <div>\n                  <label\n                    htmlFor=\"event-title\"\n                    style={{\n                      display: 'block',\n                      fontSize: '14px',\n                      fontWeight: '500',\n                      color: '#374151',\n                      marginBottom: '4px',\n                    }}\n                  >\n                    事件标题\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"event-title\"\n                    value={formData.title}\n                    onChange={(e) =>\n                      setFormData({ ...formData, title: e.target.value })\n                    }\n                    placeholder=\"请输入事件标题\"\n                    style={{\n                      width: '100%',\n                      padding: '8px 16px',\n                      border: '1px solid #d1d5db',\n                      borderRadius: '8px',\n                      fontSize: '14px',\n                      outline: 'none',\n                      boxSizing: 'border-box',\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gap: '16px',\n                  }}\n                >\n                  <div>\n                    <label\n                      htmlFor=\"event-start-date\"\n                      style={{\n                        display: 'block',\n                        fontSize: '14px',\n                        fontWeight: '500',\n                        color: '#374151',\n                        marginBottom: '4px',\n                      }}\n                    >\n                      开始日期\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"event-start-date\"\n                      value={formData.startDate}\n                      onChange={(e) =>\n                        setFormData({ ...formData, startDate: e.target.value })\n                      }\n                      style={{\n                        width: '100%',\n                        padding: '8px 16px',\n                        border: '1px solid #d1d5db',\n                        borderRadius: '8px',\n                        fontSize: '14px',\n                        outline: 'none',\n                        boxSizing: 'border-box',\n                      }}\n                    />\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"event-start-time\"\n                      style={{\n                        display: 'block',\n                        fontSize: '14px',\n                        fontWeight: '500',\n                        color: '#374151',\n                        marginBottom: '4px',\n                      }}\n                    >\n                      开始时间\n                    </label>\n                    <input\n                      type=\"time\"\n                      id=\"event-start-time\"\n                      value={formData.startTime}\n                      onChange={(e) =>\n                        setFormData({ ...formData, startTime: e.target.value })\n                      }\n                      style={{\n                        width: '100%',\n                        padding: '8px 16px',\n                        border: '1px solid #d1d5db',\n                        borderRadius: '8px',\n                        fontSize: '14px',\n                        outline: 'none',\n                        boxSizing: 'border-box',\n                      }}\n                    />\n                  </div>\n                </div>\n                <div\n                  style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gap: '16px',\n                  }}\n                >\n                  <div>\n                    <label\n                      htmlFor=\"event-end-date\"\n                      style={{\n                        display: 'block',\n                        fontSize: '14px',\n                        fontWeight: '500',\n                        color: '#374151',\n                        marginBottom: '4px',\n                      }}\n                    >\n                      结束日期\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"event-end-date\"\n                      value={formData.endDate}\n                      onChange={(e) =>\n                        setFormData({ ...formData, endDate: e.target.value })\n                      }\n                      style={{\n                        width: '100%',\n                        padding: '8px 16px',\n                        border: '1px solid #d1d5db',\n                        borderRadius: '8px',\n                        fontSize: '14px',\n                        outline: 'none',\n                        boxSizing: 'border-box',\n                      }}\n                    />\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"event-end-time\"\n                      style={{\n                        display: 'block',\n                        fontSize: '14px',\n                        fontWeight: '500',\n                        color: '#374151',\n                        marginBottom: '4px',\n                      }}\n                    >\n                      结束时间\n                    </label>\n                    <input\n                      type=\"time\"\n                      id=\"event-end-time\"\n                      value={formData.endTime}\n                      onChange={(e) =>\n                        setFormData({ ...formData, endTime: e.target.value })\n                      }\n                      style={{\n                        width: '100%',\n                        padding: '8px 16px',\n                        border: '1px solid #d1d5db',\n                        borderRadius: '8px',\n                        fontSize: '14px',\n                        outline: 'none',\n                        boxSizing: 'border-box',\n                      }}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label\n                    htmlFor=\"event-type\"\n                    style={{\n                      display: 'block',\n                      fontSize: '14px',\n                      fontWeight: '500',\n                      color: '#374151',\n                      marginBottom: '4px',\n                    }}\n                  >\n                    事件类型\n                  </label>\n                  <select\n                    id=\"event-type\"\n                    value={formData.type}\n                    onChange={(e) =>\n                      setFormData({\n                        ...formData,\n                        type: e.target.value as CalendarEvent['type'],\n                      })\n                    }\n                    style={{\n                      width: '100%',\n                      padding: '8px 16px',\n                      border: '1px solid #d1d5db',\n                      borderRadius: '8px',\n                      fontSize: '14px',\n                      outline: 'none',\n                      boxSizing: 'border-box',\n                    }}\n                  >\n                    {eventTypes.map((t) => (\n                      <option key={t.value} value={t.value}>\n                        {t.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label\n                    htmlFor=\"event-description\"\n                    style={{\n                      display: 'block',\n                      fontSize: '14px',\n                      fontWeight: '500',\n                      color: '#374151',\n                      marginBottom: '4px',\n                    }}\n                  >\n                    描述\n                  </label>\n                  <textarea\n                    id=\"event-description\"\n                    value={formData.description}\n                    onChange={(e) =>\n                      setFormData({ ...formData, description: e.target.value })\n                    }\n                    rows={3}\n                    placeholder=\"请输入事件描述（可选）\"\n                    style={{\n                      width: '100%',\n                      padding: '8px 16px',\n                      border: '1px solid #d1d5db',\n                      borderRadius: '8px',\n                      fontSize: '14px',\n                      outline: 'none',\n                      resize: 'none',\n                      boxSizing: 'border-box',\n                    }}\n                  />\n                </div>\n              </div>\n              <div style={{ display: 'flex', gap: '12px', marginTop: '24px' }}>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowModal(false)}\n                  style={{\n                    flex: 1,\n                    padding: '8px 16px',\n                    backgroundColor: '#f3f4f6',\n                    color: '#374151',\n                    borderRadius: '8px',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontWeight: '500',\n                    fontSize: '14px',\n                  }}\n                >\n                  取消\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleSave}\n                  style={{\n                    flex: 1,\n                    padding: '8px 16px',\n                    backgroundColor: '#2563eb',\n                    color: 'white',\n                    borderRadius: '8px',\n                    border: 'none',\n                    cursor: 'pointer',\n                    fontWeight: '500',\n                    fontSize: '14px',\n                  }}\n                >\n                  保存\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CalendarManagement;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/AI/Calendar/index.tsx"
    },
    "10": {
      "path": "/AI",
      "name": "AI",
      "icon": "robot",
      "parentId": "ant-design-pro-layout",
      "id": "10",
      "absPath": "/AI"
    },
    "11": {
      "path": "/AI/document-writer",
      "name": "AI 公文生成器",
      "file": "@/pages/AI/DocumentWriter/index.tsx",
      "parentId": "10",
      "id": "11",
      "absPath": "/AI/document-writer",
      "__content": "import {\n  AlignCenterOutlined,\n  AlignLeftOutlined,\n  AlignRightOutlined,\n  BoldOutlined,\n  CloudUploadOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  DownloadOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  FontColorsOutlined,\n  HighlightOutlined,\n  ItalicOutlined,\n  LeftOutlined,\n  LinkOutlined,\n  OrderedListOutlined,\n  RedoOutlined,\n  ReloadOutlined,\n  RightOutlined,\n  StrikethroughOutlined,\n  TableOutlined,\n  UnderlineOutlined,\n  UndoOutlined,\n  UnorderedListOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport { PageContainer, ProCard } from '@ant-design/pro-components';\nimport {\n  Button,\n  Col,\n  Input,\n  List,\n  Modal,\n  message,\n  Progress,\n  Row,\n  Select,\n  Space,\n  Spin,\n  Tooltip,\n  Typography,\n  Upload,\n} from 'antd';\nimport React, { useState } from 'react';\nimport { aiOptimizeDocument, aiWriteDocument } from '@/services/ai';\nimport { ossStorageService } from '@/services/ossStorage';\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\ninterface SavedDocument {\n  id: string;\n  title: string;\n  content: string;\n  type: string;\n  scenario?: string;\n  url?: string;\n  createdAt: Date;\n  size?: number;\n}\n\nconst DocumentWriter: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [content, setContent] = useState('');\n  const [htmlContent, setHtmlContent] = useState('');\n  const [documentType, setDocumentType] = useState<string>('speech');\n  const [scenario, setScenario] = useState<string>('');\n  const [titleInput, setTitleInput] = useState('');\n  const [lengthOption, setLengthOption] = useState<'short' | 'medium' | 'long'>(\n    'medium',\n  );\n  const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n  const [savedDocs, setSavedDocs] = useState<SavedDocument[]>([]);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [settingsPanelOpen, setSettingsPanelOpen] = useState(true);\n\n  const scenarioOptions: Record<string, { label: string; value: string }[]> = {\n    speech: [\n      { label: '开场演讲', value: 'opening' },\n      { label: '闭幕演讲', value: 'closing' },\n    ],\n    notice: [\n      { label: '内部通知', value: 'internal' },\n      { label: '外部通知', value: 'external' },\n    ],\n    report: [\n      { label: '个人工作报告', value: 'personal' },\n      { label: '单位工作报告', value: 'unit' },\n      { label: '专项工作报告', value: 'special' },\n    ],\n    research: [\n      { label: '市场调研报告', value: 'market' },\n      { label: '行业调研报告', value: 'industry' },\n    ],\n    suggestion: [\n      { label: '政策建议', value: 'policy' },\n      { label: '管理建议', value: 'management' },\n    ],\n  };\n\n  const formatContentToHTML = (text: string) => {\n    if (!text) return '<p><br></p>';\n\n    return text\n      .split('\\n')\n      .map((line) => {\n        const trimmed = line.trim();\n        if (!trimmed) return '<p><br></p>';\n\n        if (trimmed.startsWith('#')) {\n          const level = (line.match(/^#+/) || [''])[0].length;\n          const content = trimmed.replace(/^#+\\s*/, '');\n          if (level === 1) {\n            return `<h1 style=\"text-align: center; font-size: 22px; font-weight: bold; margin: 24px 0 20px 0; color: #000; font-family: '黑体', 'SimHei', sans-serif;\">${content}</h1>`;\n          } else if (level === 2) {\n            return `<h2 style=\"font-size: 18px; font-weight: bold; margin: 20px 0 12px 0; color: #000; font-family: '黑体', 'SimHei', sans-serif;\">${content}</h2>`;\n          } else {\n            return `<h3 style=\"font-size: 16px; font-weight: bold; margin: 16px 0 10px 0; color: #000; font-family: '黑体', 'SimHei', sans-serif;\">${content}</h3>`;\n          }\n        }\n\n        return `<p style=\"text-indent: 2em; line-height: 1.75; margin: 8px 0; font-size: 16px; color: #000;\">${trimmed}</p>`;\n      })\n      .join('');\n  };\n\n  const handleGenerate = async () => {\n    if (!prompt.trim()) {\n      message.warning('请输入文档主题或描述');\n      return;\n    }\n    setLoading(true);\n    try {\n      const filesContent = uploadedFiles\n        .map((f) => `\\n[附加素材: ${f.name}]`)\n        .join('');\n      const response = await aiWriteDocument({\n        prompt: `${prompt}\\n类型: ${documentType}\\n场景: ${scenario}\\n字数: ${lengthOption}${filesContent}`,\n        documentType: documentType as any,\n        tone: 'formal',\n        language: 'zh-CN',\n      });\n      const generatedContent = response.data?.content || '';\n      setContent(generatedContent);\n      setHtmlContent(formatContentToHTML(generatedContent));\n      message.success('文档生成成功');\n    } catch (error) {\n      message.error('生成失败，请重试');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOptimize = async () => {\n    if (!content.trim()) {\n      message.warning('请先生成文档内容');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await aiOptimizeDocument({\n        content,\n        optimizationType: 'all',\n      });\n      const optimizedContent = response.data?.content || '';\n      setContent(optimizedContent);\n      setHtmlContent(formatContentToHTML(optimizedContent));\n      message.success('文档优化成功');\n    } catch (error) {\n      message.error('优化失败，请重试');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCopy = () => {\n    const editor = document.getElementById('word-editor');\n    if (editor) {\n      const text = editor.innerText;\n      navigator.clipboard.writeText(text);\n      message.success('已复制到剪贴板');\n    }\n  };\n\n  const handleSaveToCloud = () => {\n    if (!content.trim()) {\n      message.warning('请先生成文档内容');\n      return;\n    }\n    setShowSaveModal(true);\n  };\n\n  const handleConfirmSave = async () => {\n    if (!titleInput.trim()) {\n      message.warning('请输入文档标题');\n      return;\n    }\n    setLoading(true);\n    setUploadProgress(0);\n    try {\n      const editor = document.getElementById('word-editor');\n      const currentContent = editor?.innerText || content;\n      const blob = new Blob([currentContent], { type: 'text/plain' });\n      const file = new File([blob], `${titleInput}.txt`, {\n        type: 'text/plain',\n      });\n      const result = await ossStorageService.uploadFile(file, {\n        folder: 'documents',\n        onProgress: (percent) => setUploadProgress(percent),\n      });\n      const newDoc: SavedDocument = {\n        id: Date.now().toString(),\n        title: titleInput,\n        content: currentContent,\n        type: documentType,\n        scenario,\n        url: result.url,\n        createdAt: new Date(),\n        size: result.size,\n      };\n      setSavedDocs([newDoc, ...savedDocs]);\n      message.success('文档已保存到云端');\n      setShowSaveModal(false);\n      setTitleInput('');\n    } catch (error: any) {\n      message.error(error.message || '保存失败');\n      console.error(error);\n    } finally {\n      setLoading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  const handleDownload = (doc: SavedDocument) => {\n    const blob = new Blob([doc.content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${doc.title}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n    message.success('下载成功');\n  };\n\n  const handleDelete = (docId: string) => {\n    Modal.confirm({\n      title: '确认删除',\n      content: '确定要删除这个文档吗？',\n      onOk: () => {\n        setSavedDocs(savedDocs.filter((d) => d.id !== docId));\n        message.success('文档已删除');\n      },\n    });\n  };\n\n  const handleLoadDocument = (doc: SavedDocument) => {\n    setContent(doc.content);\n    setHtmlContent(formatContentToHTML(doc.content));\n    setDocumentType(doc.type);\n    setScenario(doc.scenario || '');\n    message.success('文档已加载');\n  };\n\n  const execCommand = (command: string, value?: string) => {\n    document.execCommand(command, false, value);\n  };\n\n  const handleInput = (e: React.FormEvent<HTMLDivElement>) => {\n    const text = e.currentTarget.innerText;\n    setContent(text);\n  };\n\n  const insertTable = () => {\n    const table =\n      '<table border=\"1\" style=\"border-collapse: collapse; width: 100%; margin: 12px 0; border: 1px solid #000;\"><tr><td style=\"padding: 8px; border: 1px solid #000;\">单元格1</td><td style=\"padding: 8px; border: 1px solid #000;\">单元格2</td></tr><tr><td style=\"padding: 8px; border: 1px solid #000;\">单元格3</td><td style=\"padding: 8px; border: 1px solid #000;\">单元格4</td></tr></table>';\n    execCommand('insertHTML', table);\n  };\n\n  return (\n    <PageContainer\n      header={{\n        title: 'AI 公文生成器',\n        subTitle: '智能写作，高效办公',\n      }}\n    >\n      <div style={{ position: 'relative' }}>\n        <Row gutter={[16, 16]}>\n          {/* 左侧：文档编辑器 */}\n          <Col xs={24} lg={settingsPanelOpen ? 16 : 24}>\n            <ProCard bordered>\n              <Spin spinning={loading}>\n                <Space\n                  direction=\"vertical\"\n                  style={{ width: '100%' }}\n                  size=\"middle\"\n                >\n                  {/* Word 风格工具栏 */}\n                  <div\n                    style={{\n                      background: '#f3f4f6',\n                      padding: '8px 12px',\n                      borderRadius: '6px',\n                      border: '1px solid #e5e7eb',\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: '6px',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <Select\n                      defaultValue=\"16px\"\n                      style={{ width: 85 }}\n                      size=\"small\"\n                      onChange={(val) => execCommand('fontSize', val)}\n                      options={[\n                        { label: '12px', value: '2' },\n                        { label: '14px', value: '3' },\n                        { label: '16px', value: '4' },\n                        { label: '18px', value: '5' },\n                        { label: '20px', value: '6' },\n                      ]}\n                    />\n\n                    <div\n                      style={{\n                        borderLeft: '1px solid #d1d5db',\n                        height: '20px',\n                        margin: '0 4px',\n                      }}\n                    />\n\n                    <Tooltip title=\"粗体\">\n                      <Button\n                        size=\"small\"\n                        icon={<BoldOutlined />}\n                        onClick={() => execCommand('bold')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"斜体\">\n                      <Button\n                        size=\"small\"\n                        icon={<ItalicOutlined />}\n                        onClick={() => execCommand('italic')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"下划线\">\n                      <Button\n                        size=\"small\"\n                        icon={<UnderlineOutlined />}\n                        onClick={() => execCommand('underline')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"删除线\">\n                      <Button\n                        size=\"small\"\n                        icon={<StrikethroughOutlined />}\n                        onClick={() => execCommand('strikeThrough')}\n                      />\n                    </Tooltip>\n\n                    <div\n                      style={{\n                        borderLeft: '1px solid #d1d5db',\n                        height: '20px',\n                        margin: '0 4px',\n                      }}\n                    />\n\n                    <Tooltip title=\"字体颜色\">\n                      <Button\n                        size=\"small\"\n                        icon={<FontColorsOutlined />}\n                        onClick={() => {\n                          const color = window.prompt(\n                            '请输入颜色（如：red 或 #ff0000）',\n                            '#000000',\n                          );\n                          if (color) execCommand('foreColor', color);\n                        }}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"高亮\">\n                      <Button\n                        size=\"small\"\n                        icon={<HighlightOutlined />}\n                        onClick={() => execCommand('backColor', '#ffff00')}\n                      />\n                    </Tooltip>\n\n                    <div\n                      style={{\n                        borderLeft: '1px solid #d1d5db',\n                        height: '20px',\n                        margin: '0 4px',\n                      }}\n                    />\n\n                    <Tooltip title=\"左对齐\">\n                      <Button\n                        size=\"small\"\n                        icon={<AlignLeftOutlined />}\n                        onClick={() => execCommand('justifyLeft')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"居中\">\n                      <Button\n                        size=\"small\"\n                        icon={<AlignCenterOutlined />}\n                        onClick={() => execCommand('justifyCenter')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"右对齐\">\n                      <Button\n                        size=\"small\"\n                        icon={<AlignRightOutlined />}\n                        onClick={() => execCommand('justifyRight')}\n                      />\n                    </Tooltip>\n\n                    <div\n                      style={{\n                        borderLeft: '1px solid #d1d5db',\n                        height: '20px',\n                        margin: '0 4px',\n                      }}\n                    />\n\n                    <Tooltip title=\"编号\">\n                      <Button\n                        size=\"small\"\n                        icon={<OrderedListOutlined />}\n                        onClick={() => execCommand('insertOrderedList')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"符号\">\n                      <Button\n                        size=\"small\"\n                        icon={<UnorderedListOutlined />}\n                        onClick={() => execCommand('insertUnorderedList')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"表格\">\n                      <Button\n                        size=\"small\"\n                        icon={<TableOutlined />}\n                        onClick={insertTable}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"链接\">\n                      <Button\n                        size=\"small\"\n                        icon={<LinkOutlined />}\n                        onClick={() => {\n                          const url = window.prompt('请输入链接地址:');\n                          if (url) execCommand('createLink', url);\n                        }}\n                      />\n                    </Tooltip>\n\n                    <div\n                      style={{\n                        borderLeft: '1px solid #d1d5db',\n                        height: '20px',\n                        margin: '0 4px',\n                      }}\n                    />\n\n                    <Tooltip title=\"撤销\">\n                      <Button\n                        size=\"small\"\n                        icon={<UndoOutlined />}\n                        onClick={() => execCommand('undo')}\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"重做\">\n                      <Button\n                        size=\"small\"\n                        icon={<RedoOutlined />}\n                        onClick={() => execCommand('redo')}\n                      />\n                    </Tooltip>\n\n                    <div style={{ flex: 1 }} />\n\n                    <Space size=\"small\">\n                      <Button\n                        size=\"small\"\n                        icon={<ReloadOutlined />}\n                        onClick={handleOptimize}\n                        disabled={!content}\n                      >\n                        优化\n                      </Button>\n                      <Button\n                        size=\"small\"\n                        icon={<CopyOutlined />}\n                        onClick={handleCopy}\n                        disabled={!content}\n                      >\n                        复制\n                      </Button>\n                      <Button\n                        size=\"small\"\n                        type=\"primary\"\n                        icon={<CloudUploadOutlined />}\n                        onClick={handleSaveToCloud}\n                        disabled={!content}\n                      >\n                        保存\n                      </Button>\n                    </Space>\n                  </div>\n\n                  {/* 标准 A4 Word 编辑器 */}\n                  <div\n                    style={{\n                      background: '#e5e5e5',\n                      padding: '40px 20px',\n                      borderRadius: '4px',\n                      minHeight: '900px',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'flex-start',\n                    }}\n                  >\n                    <div\n                      id=\"word-editor\"\n                      contentEditable\n                      // biome-ignore lint/security/noDangerouslySetInnerHtml: 需要渲染富文本编辑器内容\n                      dangerouslySetInnerHTML={{ __html: htmlContent }}\n                      onInput={handleInput}\n                      style={{\n                        width: '21cm',\n                        minHeight: '29.7cm',\n                        background: '#ffffff',\n                        padding: '2.54cm 3.18cm',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                        fontSize: '16px',\n                        lineHeight: '1.75',\n                        fontFamily:\n                          '\"Times New Roman\", \"仿宋\", \"FangSong\", \"SimSun\", serif',\n                        color: '#000',\n                        outline: 'none',\n                        wordWrap: 'break-word',\n                        overflowWrap: 'break-word',\n                      }}\n                    />\n                  </div>\n                </Space>\n              </Spin>\n            </ProCard>\n          </Col>\n\n          {/* 右侧：设置面板 */}\n          {settingsPanelOpen && (\n            <Col xs={24} lg={8}>\n              <Space\n                direction=\"vertical\"\n                style={{ width: '100%' }}\n                size=\"middle\"\n              >\n                {/* 文档设置 */}\n                <ProCard title=\"文档设置\" bordered>\n                  <Space\n                    direction=\"vertical\"\n                    style={{ width: '100%' }}\n                    size=\"middle\"\n                  >\n                    <div>\n                      <Title level={5}>公文类型</Title>\n                      <Select\n                        value={documentType}\n                        onChange={(val) => {\n                          setDocumentType(val);\n                          setScenario('');\n                        }}\n                        style={{ width: '100%' }}\n                        options={[\n                          { label: '演讲稿', value: 'speech' },\n                          { label: '通知', value: 'notice' },\n                          { label: '工作报告', value: 'report' },\n                          { label: '调研报告', value: 'research' },\n                          { label: '意见建议', value: 'suggestion' },\n                        ]}\n                      />\n                    </div>\n\n                    <div>\n                      <Title level={5}>写作场景</Title>\n                      <Select\n                        value={scenario}\n                        onChange={setScenario}\n                        style={{ width: '100%' }}\n                        placeholder=\"选择场景\"\n                        options={scenarioOptions[documentType] || []}\n                      />\n                    </div>\n\n                    <div>\n                      <Title level={5}>公文标题</Title>\n                      <Input\n                        value={titleInput}\n                        onChange={(e) => setTitleInput(e.target.value)}\n                        placeholder=\"请输入公文标题\"\n                        maxLength={100}\n                      />\n                    </div>\n\n                    <div>\n                      <Title level={5}>字数</Title>\n                      <Select\n                        value={lengthOption}\n                        onChange={setLengthOption}\n                        style={{ width: '100%' }}\n                        options={[\n                          { label: '短 (500字左右)', value: 'short' },\n                          { label: '中 (1000字左右)', value: 'medium' },\n                          { label: '长 (2000字以上)', value: 'long' },\n                        ]}\n                      />\n                    </div>\n\n                    <div>\n                      <Title level={5}>写作素材（可选）</Title>\n                      <Upload\n                        beforeUpload={(file) => {\n                          setUploadedFiles([...uploadedFiles, file]);\n                          return false;\n                        }}\n                        multiple\n                        fileList={uploadedFiles.map((f, idx) => ({\n                          uid: `${f.name}-${idx}`,\n                          name: f.name,\n                          status: 'done' as const,\n                        }))}\n                        onRemove={(file) => {\n                          const idx = uploadedFiles.findIndex(\n                            (f, i) => `${f.name}-${i}` === file.uid,\n                          );\n                          if (idx > -1) {\n                            const newFiles = [...uploadedFiles];\n                            newFiles.splice(idx, 1);\n                            setUploadedFiles(newFiles);\n                          }\n                        }}\n                      >\n                        <Button icon={<UploadOutlined />} block size=\"small\">\n                          添加文件\n                        </Button>\n                      </Upload>\n                    </div>\n\n                    <div>\n                      <Title level={5}>文档描述</Title>\n                      <TextArea\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        placeholder=\"请输入文档主题或详细描述...\"\n                        rows={5}\n                        maxLength={2000}\n                        showCount\n                      />\n                    </div>\n\n                    <Button\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      onClick={handleGenerate}\n                      loading={loading}\n                      block\n                      size=\"large\"\n                    >\n                      生成文档\n                    </Button>\n                  </Space>\n                </ProCard>\n\n                {/* 已保存文档列表 */}\n                <ProCard title=\"已保存的文档\" bordered>\n                  <List\n                    dataSource={savedDocs}\n                    locale={{ emptyText: '暂无保存的文档' }}\n                    renderItem={(doc) => (\n                      <List.Item\n                        actions={[\n                          <Button\n                            key=\"load\"\n                            type=\"link\"\n                            size=\"small\"\n                            onClick={() => handleLoadDocument(doc)}\n                          >\n                            加载\n                          </Button>,\n                          <Button\n                            key=\"download\"\n                            type=\"link\"\n                            size=\"small\"\n                            icon={<DownloadOutlined />}\n                            onClick={() => handleDownload(doc)}\n                          />,\n                          <Button\n                            key=\"delete\"\n                            type=\"link\"\n                            size=\"small\"\n                            danger\n                            icon={<DeleteOutlined />}\n                            onClick={() => handleDelete(doc.id)}\n                          />,\n                        ]}\n                      >\n                        <List.Item.Meta\n                          avatar={\n                            <FileTextOutlined\n                              style={{ fontSize: 20, color: '#1890ff' }}\n                            />\n                          }\n                          title={doc.title}\n                          description={\n                            <Space direction=\"vertical\" size={0}>\n                              <span style={{ fontSize: '12px' }}>\n                                类型: {doc.type}\n                              </span>\n                              {doc.scenario && (\n                                <span style={{ fontSize: '12px' }}>\n                                  场景: {doc.scenario}\n                                </span>\n                              )}\n                              <span style={{ fontSize: '12px' }}>\n                                {doc.createdAt.toLocaleDateString('zh-CN')}\n                              </span>\n                            </Space>\n                          }\n                        />\n                      </List.Item>\n                    )}\n                  />\n                </ProCard>\n              </Space>\n            </Col>\n          )}\n        </Row>\n\n        {/* 侧边收起按钮 */}\n        <div\n          style={{\n            position: 'fixed',\n            right: settingsPanelOpen\n              ? 'calc((100vw - 1200px) / 2 + 400px + 16px)'\n              : '20px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            zIndex: 999,\n            transition: 'right 0.3s ease',\n          }}\n        >\n          <Tooltip\n            title={settingsPanelOpen ? '收起面板' : '展开面板'}\n            placement=\"left\"\n          >\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              size=\"large\"\n              icon={settingsPanelOpen ? <RightOutlined /> : <LeftOutlined />}\n              onClick={() => setSettingsPanelOpen(!settingsPanelOpen)}\n              style={{\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                width: '48px',\n                height: '48px',\n              }}\n            />\n          </Tooltip>\n        </div>\n      </div>\n\n      <Modal\n        title=\"保存文档到云端\"\n        open={showSaveModal}\n        onOk={handleConfirmSave}\n        onCancel={() => {\n          setShowSaveModal(false);\n          setTitleInput('');\n        }}\n        confirmLoading={loading}\n      >\n        <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\n          <div>\n            <Title level={5}>文档标题</Title>\n            <Input\n              value={titleInput}\n              onChange={(e) => setTitleInput(e.target.value)}\n              placeholder=\"请输入文档标题\"\n              maxLength={100}\n            />\n          </div>\n          {uploadProgress > 0 && (\n            <Progress percent={uploadProgress} status=\"active\" />\n          )}\n        </Space>\n      </Modal>\n    </PageContainer>\n  );\n};\n\nexport default DocumentWriter;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/AI/DocumentWriter/index.tsx"
    },
    "12": {
      "path": "/AI/translator",
      "name": "AI 翻译",
      "file": "@/pages/AI/Translator/index.tsx",
      "parentId": "10",
      "id": "12",
      "absPath": "/AI/translator",
      "__content": "// Translator.tsx\n\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  FileTextOutlined,\n  HistoryOutlined,\n  SoundOutlined,\n  SwapOutlined,\n} from '@ant-design/icons';\nimport { PageContainer, ProCard } from '@ant-design/pro-components';\nimport {\n  Button,\n  Col,\n  Input,\n  List,\n  message,\n  Progress,\n  Row,\n  Select,\n  Space,\n  Spin,\n  Tabs,\n  Tag,\n  Typography,\n  Upload,\n} from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { baiduTranslateService } from '@/services/baiduTranslate';\n\nconst { TextArea } = Input;\nconst { Text } = Typography;\n\ninterface TranslationHistory {\n  id: string;\n  sourceText: string;\n  translatedText: string;\n  sourceLang: string;\n  targetLang: string;\n  timestamp: Date;\n}\n\nconst Translator: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [sourceText, setSourceText] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  const [sourceLang, setSourceLang] = useState('zh-CN');\n  const [targetLang, setTargetLang] = useState('en-US');\n  const [translationHistory, setTranslationHistory] = useState<\n    TranslationHistory[]\n  >([]);\n  const [_charCount, setCharCount] = useState(0);\n\n  const languages = [\n    { label: '中文', value: 'zh-CN' },\n    { label: '英语', value: 'en-US' },\n    { label: '日语', value: 'ja-JP' },\n    { label: '韩语', value: 'ko-KR' },\n    { label: '法语', value: 'fr-FR' },\n    { label: '德语', value: 'de-DE' },\n    { label: '西班牙语', value: 'es-ES' },\n    { label: '俄语', value: 'ru-RU' },\n  ];\n\n  useEffect(() => {\n    setCharCount(sourceText.length);\n  }, [sourceText]);\n\n  const handleTranslate = async () => {\n    if (!sourceText.trim()) {\n      message.warning('请输入要翻译的内容');\n      return;\n    }\n    setLoading(true);\n    try {\n      const result = await baiduTranslateService.translate({\n        text: sourceText,\n        from: sourceLang,\n        to: targetLang,\n      });\n      setTranslatedText(result);\n\n      const newHistory: TranslationHistory = {\n        id: Date.now().toString(),\n        sourceText,\n        translatedText: result,\n        sourceLang,\n        targetLang,\n        timestamp: new Date(),\n      };\n      setTranslationHistory([newHistory, ...translationHistory.slice(0, 19)]);\n\n      message.success('翻译完成');\n    } catch (error: any) {\n      message.error(error.message || '翻译失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSwapLanguages = () => {\n    const tempLang = sourceLang;\n    setSourceLang(targetLang);\n    setTargetLang(tempLang);\n    setSourceText(translatedText);\n    setTranslatedText(sourceText);\n  };\n\n  const handleCopy = (text: string) => {\n    navigator.clipboard.writeText(text);\n    message.success('已复制到剪贴板');\n  };\n\n  const handleSpeak = (text: string, lang: string) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = lang;\n      speechSynthesis.speak(utterance);\n    } else {\n      message.warning('浏览器不支持语音朗读');\n    }\n  };\n\n  const handleClear = () => {\n    setSourceText('');\n    setTranslatedText('');\n  };\n\n  const handleLoadHistory = (history: TranslationHistory) => {\n    setSourceText(history.sourceText);\n    setTranslatedText(history.translatedText);\n    setSourceLang(history.sourceLang);\n    setTargetLang(history.targetLang);\n  };\n\n  const handleDeleteHistory = (id: string) => {\n    setTranslationHistory(translationHistory.filter((h) => h.id !== id));\n    message.success('已删除历史记录');\n  };\n\n  const handleDocumentUpload = async (file: File) => {\n    if (file.size > 5 * 1024 * 1024) {\n      message.error('文件不能超过 5MB');\n      return false;\n    }\n    setLoading(true);\n    try {\n      const text = await file.text();\n      setSourceText(text);\n      message.success('文件加载成功，准备翻译...');\n      setTimeout(() => handleTranslate(), 500);\n    } catch {\n      message.error('文件读取失败');\n    } finally {\n      setLoading(false);\n    }\n    return false;\n  };\n\n  return (\n    <PageContainer\n      header={{\n        title: 'AI 翻译',\n        subTitle: '支持历史记录和文档翻译',\n      }}\n    >\n      <ProCard>\n        <Tabs\n          items={[\n            {\n              key: 'text',\n              label: '文本翻译',\n              children: (\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <Space\n                      size=\"large\"\n                      style={{ width: '100%', justifyContent: 'center' }}\n                    >\n                      <Select\n                        value={sourceLang}\n                        onChange={setSourceLang}\n                        style={{ width: 150 }}\n                        options={languages}\n                      />\n                      <Button\n                        icon={<SwapOutlined />}\n                        onClick={handleSwapLanguages}\n                        shape=\"circle\"\n                      />\n                      <Select\n                        value={targetLang}\n                        onChange={setTargetLang}\n                        style={{ width: 150 }}\n                        options={languages}\n                      />\n                    </Space>\n                  </Col>\n\n                  <Col xs={24} lg={12}>\n                    <ProCard title=\"原文\" bordered>\n                      <TextArea\n                        value={sourceText}\n                        onChange={(e) => setSourceText(e.target.value)}\n                        placeholder=\"输入要翻译的内容...\"\n                        rows={12}\n                        maxLength={5000}\n                        showCount\n                      />\n                      <div style={{ marginTop: 16 }}>\n                        <Button\n                          type=\"primary\"\n                          onClick={handleTranslate}\n                          loading={loading}\n                          block\n                          size=\"large\"\n                        >\n                          翻译\n                        </Button>\n                        <Button\n                          onClick={handleClear}\n                          style={{ marginTop: 8 }}\n                          block\n                        >\n                          清空\n                        </Button>\n                        <Button\n                          icon={<SoundOutlined />}\n                          onClick={() => handleSpeak(sourceText, sourceLang)}\n                          disabled={!sourceText}\n                          style={{ marginTop: 8 }}\n                          block\n                        >\n                          朗读\n                        </Button>\n                      </div>\n                    </ProCard>\n                  </Col>\n\n                  <Col xs={24} lg={12}>\n                    <ProCard title=\"译文\" bordered>\n                      <Spin spinning={loading}>\n                        <TextArea\n                          value={translatedText}\n                          placeholder=\"翻译结果将显示在这里...\"\n                          rows={12}\n                          readOnly\n                        />\n                        <div style={{ marginTop: 16 }}>\n                          <Space>\n                            <Button\n                              icon={<CopyOutlined />}\n                              onClick={() => handleCopy(translatedText)}\n                              disabled={!translatedText}\n                            >\n                              复制\n                            </Button>\n                            <Button\n                              icon={<SoundOutlined />}\n                              onClick={() =>\n                                handleSpeak(translatedText, targetLang)\n                              }\n                              disabled={!translatedText}\n                            >\n                              朗读\n                            </Button>\n                          </Space>\n                        </div>\n                      </Spin>\n                    </ProCard>\n                  </Col>\n\n                  <Col span={24}>\n                    <ProCard\n                      title={\n                        <Space>\n                          <HistoryOutlined />\n                          <span>翻译历史</span>\n                          <Tag color=\"blue\">{translationHistory.length}</Tag>\n                        </Space>\n                      }\n                      bordered\n                      collapsible\n                      defaultCollapsed\n                    >\n                      <List\n                        dataSource={translationHistory}\n                        locale={{ emptyText: '暂无历史记录' }}\n                        renderItem={(item) => (\n                          <List.Item\n                            actions={[\n                              <Button\n                                key=\"load\"\n                                type=\"link\"\n                                size=\"small\"\n                                onClick={() => handleLoadHistory(item)}\n                              >\n                                加载\n                              </Button>,\n                              <Button\n                                key=\"delete\"\n                                type=\"link\"\n                                size=\"small\"\n                                danger\n                                icon={<DeleteOutlined />}\n                                onClick={() => handleDeleteHistory(item.id)}\n                              />,\n                            ]}\n                          >\n                            <List.Item.Meta\n                              title={\n                                <Space>\n                                  <Tag color=\"blue\">\n                                    {\n                                      languages.find(\n                                        (l) => l.value === item.sourceLang,\n                                      )?.label\n                                    }\n                                  </Tag>\n                                  <SwapOutlined />\n                                  <Tag color=\"green\">\n                                    {\n                                      languages.find(\n                                        (l) => l.value === item.targetLang,\n                                      )?.label\n                                    }\n                                  </Tag>\n                                </Space>\n                              }\n                              description={\n                                <div>\n                                  <Text type=\"secondary\">\n                                    {item.sourceText.substring(0, 50)}\n                                    {item.sourceText.length > 50 ? '...' : ''}\n                                  </Text>\n                                  <br />\n                                  <Text\n                                    type=\"secondary\"\n                                    style={{ fontSize: 12 }}\n                                  >\n                                    {item.timestamp.toLocaleString('zh-CN')}\n                                  </Text>\n                                </div>\n                              }\n                            />\n                          </List.Item>\n                        )}\n                      />\n                    </ProCard>\n                  </Col>\n                </Row>\n              ),\n            },\n            {\n              key: 'document',\n              label: '文档翻译',\n              children: (\n                <div style={{ padding: '40px', textAlign: 'center' }}>\n                  <Upload.Dragger\n                    beforeUpload={handleDocumentUpload}\n                    maxCount={1}\n                    accept=\".txt,.doc,.docx,.pdf,.md\"\n                  >\n                    <p className=\"ant-upload-drag-icon\">\n                      <FileTextOutlined style={{ fontSize: 48 }} />\n                    </p>\n                    <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\n                    <p className=\"ant-upload-hint\">\n                      支持 TXT、MD、DOC、DOCX、PDF，最大 5MB\n                    </p>\n                  </Upload.Dragger>\n                  {loading && (\n                    <div style={{ marginTop: 24 }}>\n                      <Progress percent={50} status=\"active\" />\n                      <Text type=\"secondary\">正在处理文档...</Text>\n                    </div>\n                  )}\n                </div>\n              ),\n            },\n          ]}\n        />\n      </ProCard>\n    </PageContainer>\n  );\n};\n\nexport default Translator;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/AI/Translator/index.tsx"
    },
    "13": {
      "path": "/AI/meeting-assistant",
      "name": "AI 会议助手",
      "file": "@/pages/AI/MeetingAssistant/index.tsx",
      "parentId": "10",
      "id": "13",
      "absPath": "/AI/meeting-assistant",
      "__content": "// MeetingAssistant.tsx - 升级版 AI 会议助手，集成腾讯会议 API\n\nimport {\n  AudioOutlined,\n  CalendarOutlined,\n  CheckCircleOutlined,\n  ClockCircleOutlined,\n  CopyOutlined,\n  DownloadOutlined,\n  FileTextOutlined,\n  LinkOutlined,\n  PauseCircleOutlined,\n  TeamOutlined,\n  VideoCameraOutlined,\n} from '@ant-design/icons';\nimport { PageContainer, ProCard, ProList } from '@ant-design/pro-components';\nimport {\n  Alert,\n  Avatar,\n  Badge,\n  Button,\n  Col,\n  DatePicker,\n  Descriptions,\n  Input,\n  Modal,\n  message,\n  Row,\n  Space,\n  Spin,\n  Tabs,\n  Tag,\n  Timeline,\n  TimePicker,\n  Typography,\n} from 'antd';\nimport dayjs, { type Dayjs } from 'dayjs';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { aiGenerateMeetingNotes } from '@/services/ai';\nimport { tencentMeetingService } from '@/services/tencentMeeting';\n\nconst { TextArea } = Input;\nconst { Title, Paragraph, Text } = Typography;\n\ninterface ActionItem {\n  id: string;\n  task: string;\n  assignee: string;\n  deadline: string;\n  status: 'pending' | 'completed';\n}\n\ninterface MeetingInfo {\n  meeting_id: string;\n  meeting_code: string;\n  subject: string;\n  join_url: string;\n  start_time?: string;\n  end_time?: string;\n  status?: string;\n}\n\nconst MeetingAssistant: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [meetingSummary, setMeetingSummary] = useState('');\n  const [actionItems, setActionItems] = useState<ActionItem[]>([]);\n  const [decisions, setDecisions] = useState<string[]>([]);\n  const [participants, setParticipants] = useState<string[]>([]);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n\n  // 会议管理\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [meetingList, setMeetingList] = useState<MeetingInfo[]>([]);\n  const [currentMeeting, setCurrentMeeting] = useState<MeetingInfo | null>(\n    null,\n  );\n  const [meetingSubject, setMeetingSubject] = useState('');\n  const [meetingDate, setMeetingDate] = useState<Dayjs>(dayjs());\n  const [startTime, setStartTime] = useState<Dayjs>(dayjs());\n  const [endTime, setEndTime] = useState<Dayjs>(dayjs().add(1, 'hour'));\n\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  // 加载会议列表\n  useEffect(() => {\n    loadMeetingList();\n  }, []);\n\n  // 录音计时器\n  useEffect(() => {\n    if (recording) {\n      timerRef.current = setInterval(() => {\n        setRecordingDuration((prev) => prev + 1);\n      }, 1000);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      setRecordingDuration(0);\n    }\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [recording]);\n\n  const formatDuration = (seconds: number): string => {\n    const hrs = Math.floor(seconds / 3600);\n    const mins = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const loadMeetingList = async () => {\n    setLoading(true);\n    try {\n      const meetings = await tencentMeetingService.getUserMeetings();\n      setMeetingList(meetings);\n    } catch (error: any) {\n      message.error(error.message || '加载会议列表失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateMeeting = async (): Promise<void> => {\n    if (!meetingSubject.trim()) {\n      message.warning('请输入会议主题');\n      return; // 明确返回 void\n    }\n\n    setLoading(true);\n    try {\n      const startDateTime = meetingDate\n        .hour(startTime.hour())\n        .minute(startTime.minute())\n        .unix();\n      const endDateTime = meetingDate\n        .hour(endTime.hour())\n        .minute(endTime.minute())\n        .unix();\n\n      const meetingInfo = await tencentMeetingService.createMeeting({\n        subject: meetingSubject,\n        type: 0,\n        start_time: startDateTime.toString(),\n        end_time: endDateTime.toString(),\n        settings: {\n          mute_enable_join: true,\n          allow_unmute_self: true,\n          auto_record_type: 'cloud',\n        },\n      });\n\n      setCurrentMeeting(meetingInfo);\n      setShowCreateModal(false);\n      message.success('会议创建成功！');\n      loadMeetingList();\n\n      Modal.info({\n        title: '会议创建成功',\n        width: 600,\n        content: (\n          <Descriptions column={1} bordered>\n            <Descriptions.Item label=\"会议主题\">\n              {meetingInfo.subject}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"会议号\">\n              {meetingInfo.meeting_code}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"会议链接\">\n              <Space>\n                <a\n                  href={meetingInfo.join_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {meetingInfo.join_url}\n                </a>\n                <Button\n                  size=\"small\"\n                  icon={<CopyOutlined />}\n                  onClick={() => {\n                    navigator.clipboard.writeText(meetingInfo.join_url);\n                    message.success('已复制链接');\n                  }}\n                />\n              </Space>\n            </Descriptions.Item>\n          </Descriptions>\n        ),\n      });\n    } catch (error: any) {\n      message.error(error.message || '创建会议失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleJoinMeeting = (meeting: MeetingInfo) => {\n    window.open(meeting.join_url, '_blank');\n    message.info('正在打开会议链接...');\n  };\n\n  const handleCancelMeeting = async (meetingId: string) => {\n    Modal.confirm({\n      title: '确认取消会议',\n      content: '取消后将无法恢复，确定要取消这个会议吗？',\n      onOk: async () => {\n        setLoading(true);\n        try {\n          await tencentMeetingService.cancelMeeting(meetingId, '主动取消');\n          message.success('会议已取消');\n          loadMeetingList();\n        } catch (error: any) {\n          message.error(error.message || '取消会议失败');\n        } finally {\n          setLoading(false);\n        }\n      },\n    });\n  };\n\n  const handleStartRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      const audioChunks: Blob[] = [];\n\n      mediaRecorder.ondataavailable = (e) => audioChunks.push(e.data);\n      mediaRecorder.onstop = async () => {\n        message.success('录音已停止，正在处理...');\n      };\n\n      mediaRecorder.start();\n      setRecording(true);\n      message.success('开始录音...');\n    } catch {\n      message.error('无法访问麦克风，请检查权限设置');\n    }\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current && recording) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      setRecording(false);\n    }\n  };\n\n  const handleGenerateNotes = async (): Promise<void> => {\n    if (!transcript.trim()) {\n      message.warning('请先输入或录制会议内容');\n      return; // 明确返回 void\n    }\n\n    setLoading(true);\n    try {\n      const response = await aiGenerateMeetingNotes({\n        transcript,\n        meetingType: 'general',\n        participants,\n      });\n      const data = response.data;\n      setMeetingSummary(data.summary || '');\n      setActionItems(data.actionItems || []);\n      setDecisions(data.decisions || []);\n      message.success('会议记录生成成功');\n    } catch {\n      message.error('生成失败，请重试');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExport = () => {\n    const content = `\n# 会议摘要\n${meetingSummary}\n\n# 会议信息\n${currentMeeting ? `- 会议主题：${currentMeeting.subject}\\n- 会议号：${currentMeeting.meeting_code}\\n- 会议时间：${currentMeeting.start_time}` : ''}\n\n# 参会人员\n${participants.map((p) => `- ${p}`).join('\\n')}\n\n# 决策事项\n${decisions.map((d, i) => `${i + 1}. ${d}`).join('\\n')}\n\n# 行动项\n${actionItems.map((item, i) => `${i + 1}. ${item.task} - 负责人：${item.assignee} - 截止：${item.deadline}`).join('\\n')}\n\n# 会议转录\n${transcript}\n        `;\n\n    const blob = new Blob([content], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `meeting-notes-${Date.now()}.md`;\n    a.click();\n    URL.revokeObjectURL(url);\n    message.success('导出成功');\n  };\n\n  return (\n    <PageContainer\n      header={{\n        title: 'AI 会议助手',\n        subTitle: '预约会议、实时转录、智能摘要、自动提取行动项',\n      }}\n    >\n      <Row gutter={[16, 16]}>\n        {/* 会议管理区域 */}\n        <Col span={24}>\n          <ProCard\n            title={\n              <Space>\n                <VideoCameraOutlined />\n                会议管理\n              </Space>\n            }\n            extra={\n              <Button\n                type=\"primary\"\n                icon={<CalendarOutlined />}\n                onClick={() => setShowCreateModal(true)}\n              >\n                预约会议\n              </Button>\n            }\n            bordered\n          >\n            <Spin spinning={loading}>\n              {meetingList.length === 0 ? (\n                <Alert\n                  message=\"暂无会议\"\n                  description=\"点击右上角「预约会议」按钮创建新会议\"\n                  type=\"info\"\n                  showIcon\n                />\n              ) : (\n                <ProList\n                  rowKey=\"meeting_id\"\n                  dataSource={meetingList}\n                  metas={{\n                    title: { dataIndex: 'subject' },\n                    description: {\n                      render: (_, row) => `会议号：${row.meeting_code}`,\n                    },\n                    actions: {\n                      render: (_, row) => [\n                        <Button\n                          key=\"join\"\n                          type=\"link\"\n                          icon={<LinkOutlined />}\n                          onClick={() => handleJoinMeeting(row)}\n                        >\n                          加入\n                        </Button>,\n                        <Button\n                          key=\"cancel\"\n                          type=\"link\"\n                          danger\n                          onClick={() => handleCancelMeeting(row.meeting_id)}\n                        >\n                          取消\n                        </Button>,\n                      ],\n                    },\n                  }}\n                />\n              )}\n            </Spin>\n          </ProCard>\n        </Col>\n\n        {/* 会议内容 */}\n        <Col xs={24} lg={16}>\n          <ProCard title=\"会议内容\" bordered>\n            <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\n              <Space>\n                <Button\n                  type={recording ? 'default' : 'primary'}\n                  danger={recording}\n                  icon={recording ? <PauseCircleOutlined /> : <AudioOutlined />}\n                  onClick={\n                    recording ? handleStopRecording : handleStartRecording\n                  }\n                  size=\"large\"\n                >\n                  {recording ? '停止录音' : '开始录音'}\n                </Button>\n                {recording && (\n                  <Space>\n                    <Badge status=\"processing\" text=\"正在录音\" />\n                    <Text strong>{formatDuration(recordingDuration)}</Text>\n                  </Space>\n                )}\n              </Space>\n\n              <div>\n                <Title level={5}>会议转录 / 手动输入</Title>\n                <TextArea\n                  value={transcript}\n                  onChange={(e) => setTranscript(e.target.value)}\n                  placeholder=\"会议内容将实时显示在这里，也可以手动输入...\"\n                  rows={12}\n                  style={{ minHeight: '300px' }}\n                />\n              </div>\n\n              <Space>\n                <Button\n                  type=\"primary\"\n                  icon={<FileTextOutlined />}\n                  onClick={handleGenerateNotes}\n                  loading={loading}\n                  size=\"large\"\n                >\n                  生成会议记录\n                </Button>\n                <Button\n                  icon={<DownloadOutlined />}\n                  onClick={handleExport}\n                  disabled={!meetingSummary}\n                >\n                  导出记录\n                </Button>\n              </Space>\n            </Space>\n          </ProCard>\n        </Col>\n\n        {/* 参会人员 & 时长 */}\n        <Col xs={24} lg={8}>\n          <Space direction=\"vertical\" style={{ width: '100%' }} size={16}>\n            <ProCard title=\"参会人员\" bordered>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                {participants.length > 0 ? (\n                  participants.map((name) => (\n                    <div key={name}>\n                      <Avatar size=\"small\" icon={<TeamOutlined />} /> {name}\n                    </div>\n                  ))\n                ) : (\n                  <Text type=\"secondary\">暂无参会人员</Text>\n                )}\n                <Input\n                  placeholder=\"添加参会人员\"\n                  onPressEnter={(e) => {\n                    const value = e.currentTarget.value.trim();\n                    if (value) {\n                      setParticipants([...participants, value]);\n                      e.currentTarget.value = '';\n                    }\n                  }}\n                />\n              </Space>\n            </ProCard>\n            <ProCard title=\"会议时长\" bordered>\n              <Space>\n                <ClockCircleOutlined />\n                <Text strong>{formatDuration(recordingDuration)}</Text>\n              </Space>\n            </ProCard>\n          </Space>\n        </Col>\n\n        {/* 摘要 / 行动项 / 决策事项 */}\n        <Col span={24}>\n          <ProCard>\n            <Tabs\n              items={[\n                {\n                  key: 'summary',\n                  label: '会议摘要',\n                  children: (\n                    <Spin spinning={loading}>\n                      {meetingSummary ? (\n                        <Paragraph>{meetingSummary}</Paragraph>\n                      ) : (\n                        <Text type=\"secondary\">暂无摘要</Text>\n                      )}\n                    </Spin>\n                  ),\n                },\n                {\n                  key: 'actions',\n                  label: (\n                    <span>\n                      行动项{' '}\n                      {actionItems.length > 0 && (\n                        <Badge count={actionItems.length} />\n                      )}\n                    </span>\n                  ),\n                  children: (\n                    <ProList<ActionItem>\n                      rowKey=\"id\"\n                      dataSource={actionItems}\n                      metas={{\n                        title: { dataIndex: 'task' },\n                        description: {\n                          render: (_, row) => (\n                            <Space>\n                              <Text type=\"secondary\">\n                                负责人：{row.assignee}\n                              </Text>\n                              <Text type=\"secondary\">截止：{row.deadline}</Text>\n                            </Space>\n                          ),\n                        },\n                        actions: {\n                          render: (_, row) => [\n                            <Tag\n                              key=\"status\"\n                              color={\n                                row.status === 'completed'\n                                  ? 'success'\n                                  : 'default'\n                              }\n                            >\n                              {row.status === 'completed' ? '已完成' : '进行中'}\n                            </Tag>,\n                          ],\n                        },\n                      }}\n                      locale={{ emptyText: '暂无行动项' }}\n                    />\n                  ),\n                },\n                {\n                  key: 'decisions',\n                  label: (\n                    <span>\n                      决策事项{' '}\n                      {decisions.length > 0 && (\n                        <Badge count={decisions.length} />\n                      )}\n                    </span>\n                  ),\n                  children: (\n                    <Timeline\n                      items={\n                        decisions.length > 0\n                          ? decisions.map((d) => ({\n                              children: d,\n                              dot: <CheckCircleOutlined />,\n                            }))\n                          : [\n                              {\n                                children: (\n                                  <Text type=\"secondary\">暂无决策事项</Text>\n                                ),\n                              },\n                            ]\n                      }\n                    />\n                  ),\n                },\n              ]}\n            />\n          </ProCard>\n        </Col>\n      </Row>\n\n      {/* 创建会议对话框 */}\n      <Modal\n        title=\"预约会议\"\n        open={showCreateModal}\n        onOk={handleCreateMeeting}\n        onCancel={() => setShowCreateModal(false)}\n        confirmLoading={loading}\n        width={600}\n      >\n        <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\n          <div>\n            <Title level={5}>会议主题 *</Title>\n            <Input\n              value={meetingSubject}\n              onChange={(e) => setMeetingSubject(e.target.value)}\n              placeholder=\"请输入会议主题\"\n              maxLength={100}\n            />\n          </div>\n          <div>\n            <Title level={5}>会议日期 *</Title>\n            <DatePicker\n              value={meetingDate}\n              onChange={(date) => date && setMeetingDate(date)}\n              style={{ width: '100%' }}\n              format=\"YYYY-MM-DD\"\n            />\n          </div>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Title level={5}>开始时间 *</Title>\n              <TimePicker\n                value={startTime}\n                onChange={(time) => time && setStartTime(time)}\n                style={{ width: '100%' }}\n                format=\"HH:mm\"\n              />\n            </Col>\n            <Col span={12}>\n              <Title level={5}>结束时间 *</Title>\n              <TimePicker\n                value={endTime}\n                onChange={(time) => time && setEndTime(time)}\n                style={{ width: '100%' }}\n                format=\"HH:mm\"\n              />\n            </Col>\n          </Row>\n          <Alert\n            message=\"提示\"\n            description=\"创建会议后，您将获得会议号和入会链接，可分享给参会人员\"\n            type=\"info\"\n            showIcon\n          />\n        </Space>\n      </Modal>\n    </PageContainer>\n  );\n};\n\nexport default MeetingAssistant;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/AI/MeetingAssistant/index.tsx"
    },
    "14": {
      "path": "/",
      "redirect": "/welcome",
      "parentId": "ant-design-pro-layout",
      "id": "14",
      "absPath": "/"
    },
    "15": {
      "layout": false,
      "path": "./*",
      "file": "@/pages/404.tsx",
      "id": "15",
      "absPath": "/./*",
      "__content": "import { history, useIntl } from '@umijs/max';\nimport { Button, Card, Result } from 'antd';\nimport React from 'react';\n\nconst NoFoundPage: React.FC = () => (\n  <Card variant=\"borderless\">\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle={useIntl().formatMessage({ id: 'pages.404.subTitle' })}\n      extra={\n        <Button type=\"primary\" onClick={() => history.push('/')}>\n          {useIntl().formatMessage({ id: 'pages.404.buttonText' })}\n        </Button>\n      }\n    />\n  </Card>\n);\n\nexport default NoFoundPage;\n",
      "__isJSFile": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/pages/404.tsx"
    },
    "ant-design-pro-layout": {
      "id": "ant-design-pro-layout",
      "path": "/",
      "file": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/.umi/plugin-layout/Layout.tsx",
      "absPath": "/",
      "isLayout": true,
      "__absFile": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/.umi/plugin-layout/Layout.tsx"
    },
    "umi/plugin/openapi": {
      "path": "/umi/plugin/openapi",
      "absPath": "/umi/plugin/openapi",
      "id": "umi/plugin/openapi",
      "file": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/.umi/plugin-openapi/openapi.tsx"
    }
  },
  "apiRoutes": {},
  "hasSrcDir": true,
  "npmClient": "cnpm",
  "umi": {
    "version": "4.5.1",
    "name": "Umi Max",
    "importSource": "@umijs/max",
    "cliName": "max"
  },
  "bundleStatus": {
    "done": false
  },
  "react": {
    "version": "19.2.0",
    "path": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react"
  },
  "react-dom": {
    "version": "19.2.0",
    "path": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\react-dom"
  },
  "appJS": {
    "path": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\src\\app.tsx",
    "exports": [
      "getInitialState",
      "layout",
      "request"
    ]
  },
  "locale": "en-US",
  "globalCSS": [
    "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\src\\global.less"
  ],
  "globalJS": [
    "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\src\\global.tsx"
  ],
  "overridesCSS": [],
  "globalLoading": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/src/loading.tsx",
  "bundler": "mako",
  "git": {
    "originUrl": "git@github.com:felix-diao/DocumentWriter.git"
  },
  "framework": "react",
  "typescript": {
    "tsVersion": "5.9.3",
    "tslibVersion": "2.8.1"
  },
  "faviconFiles": [],
  "port": 8000,
  "host": "0.0.0.0",
  "ip": "10.180.17.100",
  "antd": {
    "pkgPath": "C:\\Users\\ddj\\Desktop\\DocumentWriter\\DocumentWriter\\node_modules\\antd",
    "version": "5.27.4"
  },
  "pluginLayout": {
    "pkgPath": "C:/Users/ddj/Desktop/DocumentWriter/DocumentWriter/node_modules/@ant-design/pro-components",
    "version": "2.8.10"
  }
}
